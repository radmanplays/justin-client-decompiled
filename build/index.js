var v=Object.defineProperty;var G=(f,P)=>{for(var I in P)v(f,I,{get:P[I],enumerable:!0,configurable:!0,set:(A)=>P[I]=()=>A})};function Y(f){var P=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(f);return P?{r:parseInt(P[1],16),g:parseInt(P[2],16),b:parseInt(P[3],16)}:{r:255,g:255,b:255}}var F="Justin Client v2",K="#00c3ff",w=Y(K),m={r:Math.round((w.r/255+Number.EPSILON)*100)/100,g:Math.round((w.g/255+Number.EPSILON)*100)/100,b:Math.round((w.b/255+Number.EPSILON)*100)/100};var V={};G(V,{init:()=>B});function B(f){f.settings=[{name:"Height",type:"Slider",min:1,max:6,step:0.5,current:1.5}],f.onUpdate=function(){if(f.getEnabled()){if(ModAPI.player.stepHeight!=f.settings[0].current)ModAPI.player.stepHeight=f.settings[0].current}},f.onEnable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=f.settings[0].current},f.onDisable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=0.6000000238418579}}var W={};G(W,{init:()=>k});function k(f){f.crshInter=null,f.settings=[{name:"PPS",type:"Slider",min:20,max:20000,step:10,current:5000}];function P(){if(ModAPI.player!=null)for(let I=0;I<f.settings[0].current;I++)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]());else f.disable()}f.onEnable=function(){f.crshInter=setInterval(P,1000)},f.onDisable=function(){if(f.crshInter!=null)clearInterval(f.crshInter)}}function O(f){this.enabledDONOTUSE=!1,this.init=function(){},this.onEnable=function(){},this.onDisable=function(){},this.enable=function(){this.enabledDONOTUSE=!0,this.onEnable(),Q("enable")},this.disable=function(){this.enabledDONOTUSE=!1,this.onDisable(),Q("disable")},this.onKey=function(P){},this.onMCKey=function(P){},this.getEnabled=function(){return this.enabledDONOTUSE},this.toggle=function(){if(this.enabledDONOTUSE=!this.enabledDONOTUSE,this.enabledDONOTUSE)this.onEnable();else this.onDisable()},this.onUpdate=function(){},this.onFrame=()=>{},this.toggleKey="KeyNone",this.alert=function(){alert()},this.settings=[],f.init(this)}var $={movement:"Movement",player:"Player",render:"Render",fun:"Fun"},L={step:{name:"Step",function:new O(V),category:"Movement",description:"Allows you to step higher"},servercrasher:{name:"Server Crasher",function:new O(W),category:"Exploit",description:"Sends just a few swing packets ;)"}};function S(){if(document.getElementById("ui")!=null)document.getElementById("ui").remove();if(ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=mn,ModAPI.mc.currentScreen.getRef().constructor.name==="nmcg_GuiIngameMenu")ModAPI.mc.displayGuiScreen(null)}function _(){if(document.getElementById("ui")==null)return!1;else return!0}function g(f){const P=f.function.settings;console.log(P);const I=document.createElement("div");I.className="setting",I.style.position="absolute",I.style.color="white",I.style.backdropFilter="blur(8px)",I.style.background="rgba(0,0,0,0.5)",I.style.borderRadius="15px",I.style.padding="15px",I.style.fontFamily="monospace",I.style.overflowX="hidden",I.style.overflowX="auto",I.style.width="15%",I.style.height="50%",I.style.top="100px",I.style.left="100px",I.style.userSelect="none",I.style.zIndex="1000",I.style.backdropFilter="blur(8px)",I.style.resize="both";const A=document.createElement("div");A.innerText=f.name,A.style.fontSize="22px",I.appendChild(A);const E=document.createElement("div");E.innerText="X",E.style.fontSize="28px",E.style.position="absolute",E.style.right="15px",E.style.top="10px",E.style.cursor="pointer",E.onclick=function(){S()},I.appendChild(E);const z=I;function U({movementX:M,movementY:x}){let T=window.getComputedStyle(z),N=parseInt(T.left),H=parseInt(T.top);z.style.left=`${N+M}px`,z.style.top=`${H+x}px`}A.addEventListener("mousedown",()=>{window.addEventListener("mousemove",U)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",U)}),document.body.appendChild(I);const C=document.createElement("button");C.innerText="Toggle",C.style.border="none",C.style.color="#FFF",C.style.background="rgba(100,100,100,0.5)",C.style.width="100%",C.style.margin="5px",C.style.borderRadius="10px",C.style.fontSize="18px",C.style.padding="10px 5px 10px 5px",C.onclick=()=>{f.function.toggle(),Q("toggle")},I.appendChild(C);const p=document.createElement("button");if(f.function.toggleKey!=null)p.innerText=f.function.toggleKey;else p.innerText="No key set";p.style.border="none",p.style.color="#FFF",p.style.background="rgba(100,100,100,0.5)",p.style.width="100%",p.style.margin="5px",p.style.borderRadius="10px",p.style.fontSize="18px",p.style.padding="10px 0px 10px 0px",p.onclick=()=>{p.innerText="Press any key or esc...",window.addEventListener("keydown",M);function M(x){if(x.code=="Escape")f.function.toggleKey="KeyNone";else f.function.toggleKey=x.code;p.innerText=f.function.toggleKey,window.removeEventListener("keydown",M)}},I.appendChild(p);for(let M in P)if(P.hasOwnProperty(M)){const x=P[M],T=document.createElement("div");if(T.style.background="rgba(100,100,100,0.5)",T.style.margin="5px",T.style.padding="5px",T.style.borderRadius="10px",I.appendChild(T),x.type=="List"){const N=document.createElement("div");N.style.fontSize="20px",N.innerText=`${x.name} - ${x.current}`,T.appendChild(N);const H=document.createElement("select");H.onchange=()=>{x.current=parseInt(H.value),N.innerText=`${x.name} - ${x.current}`};for(let q in x.modes){if(x.modes.hasOwnProperty(q)){const Z=document.createElement("option");Z.innerText=x.modes[q],Z.value=`${q}`}T.appendChild(H)}}else if(x.type=="Slider"){const N=document.createElement("div");N.style.fontSize="20px",N.innerText=`${x.name} - ${x.current}`,T.appendChild(N);const H=document.createElement("input");H.type="range",H.style.width="100%",H.step=x.step,H.min=x.min,H.max=x.max,H.value=x.current,H.onchange=()=>{x.current=parseFloat(H.value),N.innerText=`${x.name} - ${x.current}`},T.appendChild(H)}else if(x.type=="Boolean"){const N=document.createElement("div");N.style.fontSize="20px",N.innerText=`${x.name} - ${x.toggled}`,T.appendChild(N);const H=document.createElement("input");H.type="checkbox",H.checked=x.toggled,H.onchange=()=>{x.toggled=H.checked,N.innerText=`${x.name} - ${x.toggled}`},T.appendChild(H)}else if(x.type=="Color"){const N=document.createElement("div");N.style.fontSize="20px",N.innerText=`${x.name} - ${x.current}`,T.appendChild(N);const H=document.createElement("input");H.type="color",H.value=x.current,H.onchange=()=>{x.current=H.value,N.innerText=`${x.name} - ${x.current}`},T.appendChild(H)}}}function h(){ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=()=>{},document.exitPointerLock();const f=F,P=document.createElement("div");P.style.animation="fade-in 0.5s",P.id="ui",P.style.position="fixed",P.style.width="66%",P.style.height="66%",P.style.top=`${document.body.clientHeight*0.165}px`,P.style.left=`${document.body.clientWidth*0.165}px`,P.style.color="white",P.style.backdropFilter="blur(8px)",P.style.background="rgba(0,0,0,0.75)",P.style.borderRadius="15px",P.style.padding="15px",P.style.fontFamily="monospace",P.style.overflowY="hidden",P.style.userSelect="none",P.style.zIndex="1000",document.body.appendChild(P);const I=document.createElement("div");I.innerText=f,I.style.fontSize="24px",I.style.margin="5px",P.appendChild(I);const A=document.createElement("input");A.style.width="33%",A.type="text",A.style.border="solid 2px rgba(200,200,200,0.5)",A.style.borderRadius="10px",A.style.color="rgba(255,255,255,1)",A.style.display="inline-block",A.style.padding="8px",A.style.marginLeft="20px",A.style.fontSize="22px",A.style.background="rgba(50,50,50,.24)",A.placeholder="\uD83D\uDD0E\uFE0E Search",A.style.backdropFilter="blur(8px)";const E=document.createElement("div");E.innerText="X",E.style.fontSize="28px",E.style.position="absolute",E.style.right="15px",E.style.top="10px",E.style.cursor="pointer",E.onclick=function(){S()},P.appendChild(E);const z=document.createElement("div");z.style.overflowX="scroll",P.appendChild(z);for(let U in $)if($.hasOwnProperty(U)){const C=document.createElement("div");C.innerText=$[U],C.style.fontSize="18px",C.style.cursor="pointer",C.style.display="inline-block",C.style.padding="10px",C.style.margin="5px",C.style.background="rgba(100,100,100,0.5)",C.style.borderRadius="5px",C.onclick=()=>{}}R=document.createElement("center"),R.style.height="90%",R.style.overflowY="scroll",P.appendChild(R),Q("ui")}function Q(f){if(console.log(f),_()){R.innerHTML="";for(let P in L)if(L.hasOwnProperty(P)){const I=document.createElement("div");I.addEventListener("click",(z)=>{console.log(L[P]),L[P].function.toggle(),Q("modl")});const A=document.createElement("div");A.innerText=`${L[P].name}`,A.style.fontSize="22px",A.style.fontWeight="bold",I.appendChild(A),I.appendChild(document.createElement("hr"));const E=document.createElement("div");if(E.innerText=`${L[P].description}`,I.appendChild(E),I.style.textAlign="left",I.style.display="inline-block",I.style.overflowX="hidden",I.style.width="25%",I.style.height="25%",I.style.padding="5px",I.style.borderRadius="15px",I.style.margin="10px",I.style.cursor="pointer",I.style.overflowY="scroll",I.style.background="rgba(100,100,100,0.5)",L[P].function.getEnabled())I.style.boxShadow=`0px 0px 15px ${K}`;I.oncontextmenu=(z)=>{z.preventDefault(),new g(L[P]),console.log(L[P])},R.appendChild(I)}}}function X(){const f=ModAPI.mc.currentScreen.buttonList.array1[0],P=ModAPI.mc.currentScreen.buttonList.array1[1],I=ModAPI.mc.currentScreen.buttonList.array1[2],A=ModAPI.mc.currentScreen.buttonList.array1[3];f.width17=I.width17,P.width17=A.width17,f.yPosition=I.yPosition-25,P.yPosition=A.yPosition-25,P.xPosition0=A.xPosition0,ModAPI.mc.currentScreen.enableBlur=0,ModAPI.mc.currentScreen.panoramaTimer-=1,ModAPI.mc.currentScreen.splashText=ModAPI.util.string(F)}function j(f){if(f.code=="ShiftRight"){if(!_())h()}if(ModAPI.mc.currentScreen==null&&ModAPI.mc.ingameGUI!=null){for(let P in L)if(f.code==L[P].function.toggleKey)L[P].function.toggle()}}var R,d=ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen;ModAPI.meta.title("Justin v2");ModAPI.meta.credits("Murturtle");ModAPI.meta.description("Press right shift ;)");ModAPI.require("player");ModAPI.require("network");ModAPI.require("settings");ModAPI.require("world");var y=ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen;ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen=function(...f){return X(),y.apply(this,f)};document.addEventListener("keydown",j);ModAPI.addEventListener("update",()=>{for(let f in L)if(L.hasOwnProperty(f))L[f].function.onUpdate()});document.body.appendChild(document.createElement("style"));var J=document.styleSheets[0];J.insertRule(`
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
`);J.insertRule(`
  ::-webkit-scrollbar {
    width: 10px;
  }
`);J.insertRule(`
  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0);
  }
`);J.insertRule(`
  ::-webkit-scrollbar-thumb {
    background: rgba(100, 100, 100, 0.5);
    filter: blur(4px);
  }
`);J.insertRule(`
  ::-webkit-resizer {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);J.insertRule(`
  ::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);J.insertRule(`
  @keyframes rgb-glow {
    0% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
    16% { box-shadow: 0px 0px 40px rgba(255, 255, 0, 0.75); }
    33% { box-shadow: 0px 0px 40px rgba(0, 255, 0, 0.75); }
    50% { box-shadow: 0px 0px 40px rgba(0, 255, 255, 0.75); }
    66% { box-shadow: 0px 0px 40px rgba(0, 0, 255, 0.75); }
    83% { box-shadow: 0px 0px 40px rgba(255, 0, 255, 0.75); }
    100% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
  }
`);J.insertRule(`
  @keyframes rgb-text {
    0% { color: rgba(255, 0, 0, 0.75); }
    16% { color: rgba(255, 255, 0, 0.75); }
    33% { color: rgba(0, 255, 0, 0.75); }
    50% { color: rgba(0, 255, 255, 0.75); }
    66% { color: rgba(0, 0, 255, 0.75); }
    83% { color: rgba(255, 0, 255, 0.75); }
    100% { color: rgba(255, 0, 0, 0.75); }
  }
`);

//# debugId=E05DED077EB49EB464756E2164756E21
//# sourceMappingURL=data:application/json;base64,
