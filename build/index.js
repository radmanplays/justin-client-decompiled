var Q=Object.defineProperty;var p=(e,t)=>{for(var n in t)Q(e,n,{get:t[n],enumerable:!0,configurable:!0,set:(o)=>t[n]=()=>o})};function Z(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:{r:255,g:255,b:255}}var k="Justin Client v2",w="#00c3ff",M=Z(w),Pe={r:Math.round((M.r/255+Number.EPSILON)*100)/100,g:Math.round((M.g/255+Number.EPSILON)*100)/100,b:Math.round((M.b/255+Number.EPSILON)*100)/100};var C={};p(C,{init:()=>J});function J(e){e.settings=[{name:"Height",type:"Slider",min:1,max:6,step:0.5,current:1.5}],e.onUpdate=function(){if(e.getEnabled()){if(ModAPI.player.stepHeight!=e.settings[0].current)ModAPI.player.stepHeight=e.settings[0].current}},e.onEnable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=e.settings[0].current},e.onDisable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=0.6000000238418579}}var R={};p(R,{init:()=>q});function q(e){e.crshInter=null,e.settings=[{name:"PPS",type:"Slider",min:20,max:20000,step:10,current:5000}];function t(){if(ModAPI.player!=null)for(let n=0;n<e.settings[0].current;n++)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]());else e.disable()}e.onEnable=function(){e.crshInter=setInterval(t,1000)},e.onDisable=function(){if(e.crshInter!=null)clearInterval(e.crshInter)}}var K={};var H={};var T={};p(T,{init:()=>V});function V(e){let t=[{name:"Particles",type:"Boolean",toggled:!0},{name:"Entities",type:"Boolean",toggled:!1},{name:"Weather",type:"Boolean",toggled:!0},{name:"Enchantment Book",type:"Boolean",toggled:!0},{name:"Beacon Beam",type:"Boolean",toggled:!1},{name:"Scoreboard",type:"Boolean",toggled:!1},{name:"Nametags",type:"Boolean",toggled:!1},{name:"Armor",type:"Boolean",toggled:!1},{name:"In Game Overlay",type:"Boolean",toggled:!1},{name:"Lighting",type:"Boolean",toggled:!1}],n={get(I,b){if(typeof I[b]==="object"&&I[b]!==null)return new Proxy(I[b],n);else return I[b]},set(I,b,j){return I[b]=j,S(),!0}};e.settings=new Proxy(t,n);const o=ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles,i=ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity,d=ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow,m=ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt,s=ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt,c=ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard,y=ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName,r=ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer,u=ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay,a=ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting,l=ModAPI.hooks.methods.nmw_World_checkLightFor,f=ModAPI.hooks.methods.nmwc_Chunk_getLightFor,x=ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor;function S(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=()=>{};else ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=o;if(e.settings[1].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=()=>{};else ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=i;if(e.settings[2].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=()=>{};else ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=d;if(e.settings[3].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=m;if(e.settings[4].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=s;if(e.settings[5].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=c;if(e.settings[6].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=()=>{};else ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=y;if(e.settings[7].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=()=>{};else ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=r;if(e.settings[8].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=u;if(e.settings[9].toggled&&e.getEnabled())ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=()=>{},ModAPI.hooks.methods.nmw_World_checkLightFor=()=>!1,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=()=>15,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=()=>15;else ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=a,ModAPI.hooks.methods.nmw_World_checkLightFor=l,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=f,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=x}e.onUpdate=()=>{},e.onEnable=()=>{S()},e.onDisable=()=>{S()}}var D={};p(D,{init:()=>ee});function ee(e){let t=[{name:"Update Chunks",type:"Boolean",toggled:!0}],n={get(d,m){if(typeof d[m]==="object"&&d[m]!==null)return new Proxy(d[m],n);else return d[m]},set(d,m,s){return console.log(`Property ${String(m)} changed from ${d[m]} to ${s}`),d[m]=s,i(),!0}};e.settings=new Proxy(t,n);const o=ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks;function i(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=(...d)=>{setTimeout(function(){return o.apply(this,d)},1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=o}e.onUpdate=()=>{},e.onEnable=()=>{i()},e.onDisable=()=>{i()}}var L={};p(L,{init:()=>te});function te(e){e.settings=[{name:"Distance",type:"Slider",min:4,max:32,step:2,current:16},{name:"Ignore Players",type:"Boolean",toggled:!0}],e.onUpdate=()=>{if(e.getEnabled())ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)if(t.getDistanceSqToEntity(ModAPI.player.getRef())<e.settings[0].current*e.settings[0].current||t.getRef().constructor.name=="nmce_EntityOtherPlayerMP"&&e.settings[1].toggled)t.renderDistanceWeight=100;else t.renderDistanceWeight=0})},e.onEnable=()=>{},e.onDisable=()=>{ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)t.renderDistanceWeight=1})}}var B={};p(B,{init:()=>ne});function ne(e){let t=0;e.onUpdate=()=>{if(e.getEnabled()&&t!==ModAPI.mc.gameSettings.renderDistanceChunks)ModAPI.mc.gameSettings.renderDistanceChunks=Math.floor(ModAPI.mc.gameSettings.renderDistanceChunks)+0.5,t=ModAPI.mc.gameSettings.renderDistanceChunks,console.log(ModAPI.mc.gameSettings.renderDistanceChunks)}}var O={};p(O,{init:()=>oe});function oe(e){const t=ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0;ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0=function(...n){if(e.getEnabled()){const o=ModAPI.util.jclStrToJsStr(ModAPI.mc.currentScreen.inputField.text1.getRef());if(o.startsWith("/l ")||o.startsWith("/login ")||o.startsWith("/reg ")||o.startsWith("/register "))ModAPI.mc.currentScreen.inputField.visible1=0;else ModAPI.mc.currentScreen.inputField.visible1=1}return t.apply(this,n)},e.onDisable=()=>{if(ModAPI.mc.currentScreen!=null){if(ModAPI.mc.currentScreen.inputField!=null)ModAPI.mc.currentScreen.inputField.visible1=1}}}var F={};p(F,{init:()=>re});function re(e){let t=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,n=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();e.settings=[];const o=ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox;class i{constructor(){if(e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=function(...d){ModAPI.hooks.methods.nlevo_GlStateManager_disableDepth(),o.apply(this,d),ModAPI.hooks.methods.nlevo_GlStateManager_enableDepth()};else ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=o}static onClick(){n.remove()}}e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.renderManager!=null)ModAPI.mc.renderManager.debugBoundingBox=1},e.onEnable=()=>{if(new i,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=1},e.onDisable=()=>{if(new i,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=0}}var G={};p(G,{init:()=>ie});function ie(e){let t=[{name:"Red",type:"Slider",min:0,max:1,step:0.1,current:M.r},{name:"Green",type:"Slider",min:0,max:1,step:0.1,current:M.g},{name:"Blue",type:"Slider",min:0,max:1,step:0.01,current:M.b},{name:"Alpha",type:"Slider",min:0,max:1,step:0.01,current:1}],n={get(s,c){if(typeof s[c]==="object"&&s[c]!==null)return new Proxy(s[c],n);else return s[c]},set(s,c,y){return s[c]=y,m(),!0}};e.settings=new Proxy(t,n);let o=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,i=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();const d=ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a;function m(){if(e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=function(...s){ModAPI.hooks.methods.nlevo_GlStateManager_color(t[0].current,t[1].current,t[2].current,t[3].current),d.apply(this,s),ModAPI.hooks.methods.nlevo_GlStateManager_color(1,1,1,1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=d}e.onEnable=()=>{m()},e.onDisable=()=>{m()}}var $={};p($,{init:()=>se});function se(e){e.crshInter=null,e.settings=[{name:"Reach",type:"Slider",min:0,max:6,step:0.1,current:3},{name:"Ignore GUI",type:"Boolean",toggled:!1},{name:"Attack Delay (ms)",type:"Slider",min:125,max:500,step:5,current:125},{name:"Packet Look",type:"Boolean",toggled:!1},{name:"Packet Click",type:"Boolean",toggled:!1},{name:"Disable On Death",type:"Boolean",toggled:!0}],e.toggleKey="KeyN";let t=0;const n=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1],o=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...i){if(e.settings[5].toggled&&e.getEnabled())e.disable();return o.apply(this,i)},e.onUpdate=()=>{if(e.getEnabled())if(ModAPI.mc.theWorld){let i=!1;if(ModAPI.mc.currentScreen==null||e.settings[1].toggled)i=!1,ModAPI.world.loadedEntityList.array1.forEach((d)=>{if(d!=null){if(d.getRef().constructor.name=="nmce_EntityOtherPlayerMP"){if(!i){const{posX:m,posY:s,posZ:c}=d,y=m-ModAPI.player.posX,r=s-ModAPI.player.posY,u=c-ModAPI.player.posZ,a=Math.sqrt(y*y+u*u),l=Math.atan2(u,y)*180/Math.PI-90,f=-(Math.atan2(r,a)*180/Math.PI);if(a<=e.settings[0].current&&Math.abs(r)<=e.settings[0].current&&Date.now()-t>e.settings[2].current){if(i=!0,ModAPI.mc.pointedEntity!=null){if(ModAPI.mc.pointedEntity.getEntityId()!=d.getEntityId())if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(l,f,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=l,ModAPI.player.rotationPitch=f}else if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(l,f,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=l,ModAPI.player.rotationPitch=f;if(setTimeout(()=>{if(e.settings[4].toggled)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]()),ModAPI.network.addToSendQueue(ModAPI.reflect.getClassByName("C02PacketUseEntity").constructors[1](d.getRef(),ModAPI.hooks.methods.nmnpc_C02PacketUseEntity$Action_values().data[1]));else ModAPI.clickMouse()},1),e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,ModAPI.player.onGround))},1)}}}}})}else e.disable()},e.onEnable=()=>{},e.onDisable=()=>{}}var N={};p(N,{init:()=>le});function le(e){e.crshInter=null,e.settings=[{name:"TPS",type:"Slider",min:1,max:30,step:0.5,current:22}],e.toggleKey="KeyNone",e.onUpdate=()=>{if(ModAPI.mc.timer!=null&&e.getEnabled())ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onEnable=()=>{ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onDisable=()=>{ModAPI.mc.timer.ticksPerSecond=20}}var U={};p(U,{init:()=>de});function de(e){e.onUpdate=()=>{if(e.getEnabled())ModAPI.mc.rightClickDelayTimer=0}}var W={};p(W,{init:()=>ae});function ae(e){e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.mc.gameSettings.keyBindJump.isPressed())setTimeout(()=>{ModAPI.player.jump()},1)}}}var z={};p(z,{init:()=>ce});function ce(e){const t=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1];e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.player.fallDistance>2)setInterval(()=>{ModAPI.network.addToSendQueue(t(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,1))},1)}}}function h(e){this.enabledDONOTUSE=!1,this.init=function(){},this.onEnable=function(){},this.onDisable=function(){},this.enable=function(){this.enabledDONOTUSE=!0,this.onEnable(),A("enable")},this.disable=function(){this.enabledDONOTUSE=!1,this.onDisable(),A("disable")},this.onKey=function(t){},this.onMCKey=function(t){},this.getEnabled=function(){return this.enabledDONOTUSE},this.toggle=function(){if(this.enabledDONOTUSE=!this.enabledDONOTUSE,this.enabledDONOTUSE)this.onEnable();else this.onDisable()},this.onUpdate=function(){},this.onFrame=()=>{},this.toggleKey="KeyNone",this.alert=function(){alert()},this.settings=[],e.init(this)}var v={movement:"Movement",player:"Player",render:"Render",fun:"Fun"},g={arraylist:{name:"Array List",function:new h(K),category:"Render",description:"Shows your enabled mods"},minimap:{name:"Mini Map",function:new h(H),category:"Render",description:"Shows nearby entities"},renderdisabler:{name:"Render Disabler",function:new h(T),category:"Render",description:"Disable some renders and get more fps"},asyncevents:{name:"Async Events",function:new h(D),category:"Render",description:"Asynchronize intensive events, not supported with shaders and VERY buggy. Best for pvp serveres"},entitydistance:{name:"Entity Distance",function:new h(L),category:"Render",description:"Lowers entity distance to improve performance"},pointfive:{name:"+0.5 Render Distance",function:new h(B),category:"Render",description:"Increases fps by desyncing loading/unloading chunks by adding 0.5 to the render distance"},passwordhider:{name:"Password Hider",function:new h(O),category:"Render",description:"Hides password when typing it in"},esp:{name:"ESP",function:new h(F),category:"Render",description:"Shows entities through walls"},outline:{name:"Custom Outline",function:new h(G),category:"Render",description:"Change the color of the properties of the block outline"},killaura:{name:"Kill Aura",function:new h($),category:"Combat",description:"Attack players around you"},step:{name:"Step",function:new h(C),category:"Movement",description:"Allows you to step higher"},timer:{name:"Timer",function:new h(N),category:"Player",description:"Modify client side tps"},fastplace:{name:"Fast Place",function:new h(U),category:"Player",description:"Allows you to place blocks fast"},airjump:{name:"Air Jump",function:new h(W),category:"Player",description:"Allows you to jump even if you are not on the ground"},nofall:{name:"No Fall",function:new h(z),category:"Player",description:"You won't take any fall damage"},servercrasher:{name:"Server Crasher",function:new h(R),category:"Exploit",description:"Sends just a few swing packets ;)"}};function ue(){if(document.getElementById("ui")!=null)document.getElementById("ui").remove();if(ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=ye,ModAPI.mc.currentScreen.getRef().constructor.name==="nmcg_GuiIngameMenu")ModAPI.mc.displayGuiScreen(null)}function _(){if(document.getElementById("ui")==null)return!1;else return!0}function ge(e){const t=e.function.settings;console.log(t);const n=document.createElement("div");n.className="setting",n.style.position="absolute",n.style.color="white",n.style.backdropFilter="blur(8px)",n.style.background="rgba(0,0,0,0.5)",n.style.borderRadius="15px",n.style.padding="15px",n.style.fontFamily="monospace",n.style.overflowX="hidden",n.style.overflowX="auto",n.style.width="15%",n.style.height="50%",n.style.top="100px",n.style.left="100px",n.style.userSelect="none",n.style.zIndex="1000",n.style.backdropFilter="blur(8px)",n.style.resize="both";const o=document.createElement("div");o.innerText=e.name,o.style.fontSize="22px",n.appendChild(o);const i=document.createElement("div");i.innerText="X",i.style.fontSize="28px",i.style.position="absolute",i.style.right="15px",i.style.top="10px",i.style.cursor="pointer",i.onclick=function(){n.remove()},n.appendChild(i);const d=n;function m({movementX:y,movementY:r}){let u=window.getComputedStyle(d),a=parseInt(u.left),l=parseInt(u.top);d.style.left=`${a+y}px`,d.style.top=`${l+r}px`}o.addEventListener("mousedown",()=>{window.addEventListener("mousemove",m)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",m)}),document.body.appendChild(n);const s=document.createElement("button");s.innerText="Toggle",s.style.border="none",s.style.color="#FFF",s.style.background="rgba(100,100,100,0.5)",s.style.width="100%",s.style.margin="5px",s.style.borderRadius="10px",s.style.fontSize="18px",s.style.padding="10px 5px 10px 5px",s.onclick=()=>{e.function.toggle(),A("toggle")},n.appendChild(s);const c=document.createElement("button");if(e.function.toggleKey!=null)c.innerText=e.function.toggleKey;else c.innerText="No key set";c.style.border="none",c.style.color="#FFF",c.style.background="rgba(100,100,100,0.5)",c.style.width="100%",c.style.margin="5px",c.style.borderRadius="10px",c.style.fontSize="18px",c.style.padding="10px 0px 10px 0px",c.onclick=()=>{c.innerText="Press any key or esc...",window.addEventListener("keydown",y);function y(r){if(r.code=="Escape")e.function.toggleKey="KeyNone";else e.function.toggleKey=r.code;c.innerText=e.function.toggleKey,window.removeEventListener("keydown",y)}},n.appendChild(c);for(let y in t)if(t.hasOwnProperty(y)){const r=t[y],u=document.createElement("div");if(u.style.background="rgba(100,100,100,0.5)",u.style.margin="5px",u.style.padding="5px",u.style.borderRadius="10px",n.appendChild(u),r.type=="List"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${r.name} - ${r.current}`,u.appendChild(a);const l=document.createElement("select");l.onchange=()=>{r.current=parseInt(l.value),a.innerText=`${r.name} - ${r.current}`};for(let f in r.modes){if(r.modes.hasOwnProperty(f)){const x=document.createElement("option");x.innerText=r.modes[f],x.value=`${f}`}u.appendChild(l)}}else if(r.type=="Slider"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${r.name} - ${r.current}`,u.appendChild(a);const l=document.createElement("input");l.type="range",l.style.width="100%",l.step=r.step,l.min=r.min,l.max=r.max,l.value=r.current,l.onchange=()=>{r.current=parseFloat(l.value),a.innerText=`${r.name} - ${r.current}`},u.appendChild(l)}else if(r.type=="Boolean"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${r.name} - ${r.toggled}`,u.appendChild(a);const l=document.createElement("input");l.type="checkbox",l.checked=r.toggled,l.onchange=()=>{r.toggled=l.checked,a.innerText=`${r.name} - ${r.toggled}`},u.appendChild(l)}else if(r.type=="Color"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${r.name} - ${r.current}`,u.appendChild(a);const l=document.createElement("input");l.type="color",l.value=r.current,l.onchange=()=>{r.current=l.value,a.innerText=`${r.name} - ${r.current}`},u.appendChild(l)}}}function he(){ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=()=>{},document.exitPointerLock();const e=k,t=document.createElement("div");t.style.animation="fade-in 0.5s",t.id="ui",t.style.position="fixed",t.style.width="66%",t.style.height="66%",t.style.top=`${document.body.clientHeight*0.165}px`,t.style.left=`${document.body.clientWidth*0.165}px`,t.style.color="white",t.style.backdropFilter="blur(8px)",t.style.background="rgba(0,0,0,0.75)",t.style.borderRadius="15px",t.style.padding="15px",t.style.fontFamily="monospace",t.style.overflowY="hidden",t.style.userSelect="none",t.style.zIndex="1000",document.body.appendChild(t);const n=document.createElement("div");n.innerText=e,n.style.fontSize="24px",n.style.margin="5px",t.appendChild(n);const o=document.createElement("input");o.style.width="33%",o.type="text",o.style.border="solid 2px rgba(200,200,200,0.5)",o.style.borderRadius="10px",o.style.color="rgba(255,255,255,1)",o.style.display="inline-block",o.style.padding="8px",o.style.marginLeft="20px",o.style.fontSize="22px",o.style.background="rgba(50,50,50,.24)",o.placeholder="\uD83D\uDD0E\uFE0E Search",o.style.backdropFilter="blur(8px)";const i=document.createElement("div");i.innerText="X",i.style.fontSize="28px",i.style.position="absolute",i.style.right="15px",i.style.top="10px",i.style.cursor="pointer",i.onclick=function(){ue()},t.appendChild(i);const d=document.createElement("div");d.style.overflowX="scroll",t.appendChild(d);for(let m in v)if(v.hasOwnProperty(m)){const s=document.createElement("div");s.innerText=v[m],s.style.fontSize="18px",s.style.cursor="pointer",s.style.display="inline-block",s.style.padding="10px",s.style.margin="5px",s.style.background="rgba(100,100,100,0.5)",s.style.borderRadius="5px",s.onclick=()=>{}}E=document.createElement("center"),E.style.height="90%",E.style.overflowY="scroll",t.appendChild(E),A("ui")}function A(e){if(console.log(e),_()){E.innerHTML="";for(let t in g)if(g.hasOwnProperty(t)){const n=document.createElement("div");n.addEventListener("click",(d)=>{console.log(g[t]),g[t].function.toggle(),A("modl")});const o=document.createElement("div");o.innerText=`${g[t].name}`,o.style.fontSize="22px",o.style.fontWeight="bold",n.appendChild(o),n.appendChild(document.createElement("hr"));const i=document.createElement("div");if(i.innerText=`${g[t].description}`,n.appendChild(i),n.style.textAlign="left",n.style.display="inline-block",n.style.overflowX="hidden",n.style.width="25%",n.style.height="25%",n.style.padding="5px",n.style.borderRadius="15px",n.style.margin="10px",n.style.cursor="pointer",n.style.overflowY="scroll",n.style.background="rgba(100,100,100,0.5)",g[t].function.getEnabled())n.style.boxShadow=`0px 0px 15px ${w}`;n.oncontextmenu=(d)=>{d.preventDefault(),new ge(g[t]),console.log(g[t])},E.appendChild(n)}}}function X(){const e=ModAPI.mc.currentScreen.buttonList.array1[0],t=ModAPI.mc.currentScreen.buttonList.array1[1],n=ModAPI.mc.currentScreen.buttonList.array1[2],o=ModAPI.mc.currentScreen.buttonList.array1[3];e.width17=n.width17,t.width17=o.width17,e.yPosition=n.yPosition-25,t.yPosition=o.yPosition-25,t.xPosition0=o.xPosition0,ModAPI.mc.currentScreen.enableBlur=0,ModAPI.mc.currentScreen.panoramaTimer-=1,ModAPI.mc.currentScreen.splashText=ModAPI.util.string(k)}function Y(e){if(e.code=="ShiftRight"){if(!_())he()}if(ModAPI.mc.currentScreen==null&&ModAPI.mc.ingameGUI!=null){for(let t in g)if(e.code==g[t].function.toggleKey)g[t].function.toggle()}}var E,ye=ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen;ModAPI.meta.title("Justin v2");ModAPI.meta.credits("Murturtle");ModAPI.meta.description("Press right shift ;)");ModAPI.require("player");ModAPI.require("network");ModAPI.require("settings");ModAPI.require("world");var pe=ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen;ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen=function(...e){return X(),pe.apply(this,e)};document.addEventListener("keydown",Y);ModAPI.addEventListener("update",()=>{for(let e in g)if(g.hasOwnProperty(e))g[e].function.onUpdate()});document.body.appendChild(document.createElement("style"));var P=document.styleSheets[0];P.insertRule(`
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
`);P.insertRule(`
  ::-webkit-scrollbar {
    width: 10px;
  }
`);P.insertRule(`
  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0);
  }
`);P.insertRule(`
  ::-webkit-scrollbar-thumb {
    background: rgba(100, 100, 100, 0.5);
    filter: blur(4px);
  }
`);P.insertRule(`
  ::-webkit-resizer {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);P.insertRule(`
  ::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);P.insertRule(`
  @keyframes rgb-glow {
    0% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
    16% { box-shadow: 0px 0px 40px rgba(255, 255, 0, 0.75); }
    33% { box-shadow: 0px 0px 40px rgba(0, 255, 0, 0.75); }
    50% { box-shadow: 0px 0px 40px rgba(0, 255, 255, 0.75); }
    66% { box-shadow: 0px 0px 40px rgba(0, 0, 255, 0.75); }
    83% { box-shadow: 0px 0px 40px rgba(255, 0, 255, 0.75); }
    100% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
  }
`);P.insertRule(`
  @keyframes rgb-text {
    0% { color: rgba(255, 0, 0, 0.75); }
    16% { color: rgba(255, 255, 0, 0.75); }
    33% { color: rgba(0, 255, 0, 0.75); }
    50% { color: rgba(0, 255, 255, 0.75); }
    66% { color: rgba(0, 0, 255, 0.75); }
    83% { color: rgba(255, 0, 255, 0.75); }
    100% { color: rgba(255, 0, 0, 0.75); }
  }
`);

//# debugId=0AFB65ACADD2F9AF64756E2164756E21
//# sourceMappingURL=data:application/json;base64,
