var Me=Object.defineProperty;var y=(e,t)=>{for(var n in t)Me(e,n,{get:t[n],enumerable:!0,configurable:!0,set:(d)=>t[n]=()=>d})};function Ae(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:{r:255,g:255,b:255}}var N="Justin Client v2",ue="Justin Client",he="rev7",fe="https://bit.ly/JustinCEag",S="#00c3ff",F=["Murturtle"],v=Ae(S),De={r:Math.round((v.r/255+Number.EPSILON)*100)/100,g:Math.round((v.g/255+Number.EPSILON)*100)/100,b:Math.round((v.b/255+Number.EPSILON)*100)/100};var U={};y(U,{init:()=>pe});function pe(e){e.settings=[{name:"Height",type:"Slider",min:1,max:6,step:0.5,current:1.5}],e.onUpdate=function(){if(e.getEnabled()){if(ModAPI.player.stepHeight!=e.settings[0].current)ModAPI.player.stepHeight=e.settings[0].current}},e.onEnable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=e.settings[0].current},e.onDisable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=0.6000000238418579}}var H={};y(H,{init:()=>ke});function ke(e){e.crshInter=null,e.settings=[{name:"PPS",type:"Slider",min:20,max:20000,step:10,current:5000}];function t(){if(ModAPI.mc.theWorld!=null)for(let n=0;n<e.settings[0].current;n++)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]());else e.disable()}e.onEnable=function(){e.crshInter=setInterval(t,1000)},e.onDisable=function(){if(e.crshInter!=null)clearInterval(e.crshInter)}}var Y={};y(Y,{init:()=>Ee});function Ee(e){function t(r,s){if(r===s)return!0;if(r==null||s==null)return!1;if(r.length!==s.length)return!1;for(let c=0;c<r.length;++c)if(r[c]!==s[c])return!1;return!0}const n=(r)=>{let s=0;r.split("").forEach((a)=>{s=a.charCodeAt(0)+((s<<5)-s)});let c="#";for(let a=0;a<3;a++){const M=s>>a*8&255;c+=M.toString(16).padStart(2,"0")}return c};function d(r,s){return s=s||2,(new Array(s).join("0")+r).slice(-s)}function l(r){if(r.indexOf("#")===0)r=r.slice(1);if(r.length===3)r=r[0]+r[0]+r[1]+r[1]+r[2]+r[2];if(r.length!==6)throw new Error("Invalid HEX color.");const s=(255-parseInt(r.slice(0,2),16)).toString(16),c=(255-parseInt(r.slice(2,4),16)).toString(16),a=(255-parseInt(r.slice(4,6),16)).toString(16);return`#${d(s,2)}${d(c,2)}${d(a,2)}`}let o=document.createElement("div");o.style.position="fixed",o.style.right="0",o.style.top="0",o.style.background="#000",o.style.color="#FFF",o.style.zIndex="100",o.style.backdropFilter="blur(8px)",o.style.background="rgba(0,0,0,0.5)",o.style.borderRadius="15px",o.style.padding="10px",o.style.fontFamily="monospace",o.style.textAlign="right",o.style.fontSize="18px",o.style.userSelect="none",o.style.pointerEvents="none",document.body.appendChild(o),o.hidden=!0;let g=[],i=[];const m=o;function u({movementX:r,movementY:s}){let c=window.getComputedStyle(m),a=parseInt(c.right),M=parseInt(c.top);m.style.right=`${a-r}px`,m.style.top=`${M+s}px`}m.addEventListener("mousedown",()=>{window.addEventListener("mousemove",u)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",u)}),e.onUpdate=()=>{setTimeout(()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||_()&&e.getEnabled()){if(_())o.style.pointerEvents="auto";else o.style.pointerEvents="none";o.hidden=!1,i=[];for(var r in h)i.push(h[r].function.getEnabled());if(t(g,i));else{o.innerText="";const s=document.createElement("div");s.innerText=N,s.style.fontWeight="bold",o.appendChild(s);for(var r in h)if(h[r].function.getEnabled()){const a=document.createElement("div");a.innerText=h[r].name,a.style.color=S,o.appendChild(a)}g=i}}else o.hidden=!0},1)},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)o.hidden=!0,o.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)o.hidden=!1},e.onDisable=()=>{o.hidden=!0}}var z={};y(z,{init:()=>_e});function _e(e){e.settings=[{name:"Friendly Color",type:"Color",current:"#0000ff"},{name:"Enemy Color",type:"Color",current:"#ff0000"},{name:"Neutral Color",type:"Color",current:"#ffff00"}];let t=document.createElement("canvas");t.style.position="fixed",t.style.right="0",t.style.bottom="0",t.style.color="#FFF",t.style.zIndex="100",t.width=200,t.height=200,t.style.background="rgba(0,0,0,0.5)",t.style.borderRadius="100%",t.style.margin="10px",t.style.fontFamily="monospace",t.style.pointerEvents="none",t.style.userSelect="none",document.body.appendChild(t),t.hidden=!0;let n=t.getContext("2d"),d=t;function l({movementX:o,movementY:g}){let i=window.getComputedStyle(d),m=parseInt(i.left),u=parseInt(i.top);d.style.left=`${m+o}px`,d.style.top=`${u+g}px`}d.addEventListener("mousedown",()=>{window.addEventListener("mousemove",l)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",l)}),e.onUpdate=()=>{setTimeout(()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||_()&&e.getEnabled()){if(_())t.style.pointerEvents="auto";else t.style.pointerEvents="none";if(t.hidden=!1,n.clearRect(0,0,200,200),ModAPI.mc.theWorld!=null)ModAPI.world.loadedEntityList.array1.forEach((o)=>{if(o!=null){const g=o.posX-ModAPI.player.posX+100,i=o.posZ-ModAPI.player.posZ+100;if(o.getRef().constructor.name=="nmce_EntityOtherPlayerMP")n.fillStyle=e.settings[1].current;else n.fillStyle=e.settings[2].current;n.fillRect(g-2.5,i-2.5,5,5)}}),n.fillStyle=e.settings[0].current,n.fillRect(97.5,97.5,5,5)}else t.hidden=!0},1)},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)t.hidden=!0,t.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)t.hidden=!1},e.onDisable=()=>{t.hidden=!0}}var Z={};y(Z,{init:()=>xe});function xe(e){let t=[{name:"Particles",type:"Boolean",toggled:!0},{name:"Entities",type:"Boolean",toggled:!1},{name:"Weather",type:"Boolean",toggled:!0},{name:"Enchantment Book",type:"Boolean",toggled:!0},{name:"Beacon Beam",type:"Boolean",toggled:!1},{name:"Scoreboard",type:"Boolean",toggled:!1},{name:"Nametags",type:"Boolean",toggled:!1},{name:"Armor",type:"Boolean",toggled:!1},{name:"In Game Overlay",type:"Boolean",toggled:!1},{name:"Lighting",type:"Boolean",toggled:!1}],n={get(E,C){if(typeof E[C]==="object"&&E[C]!==null)return new Proxy(E[C],n);else return E[C]},set(E,C,Ie){return E[C]=Ie,T(),!0}};e.settings=new Proxy(t,n);const d=ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles,l=ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity,o=ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow,g=ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt,i=ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt,m=ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard,u=ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName,r=ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer,s=ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay,c=ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting,a=ModAPI.hooks.methods.nmw_World_checkLightFor,M=ModAPI.hooks.methods.nmwc_Chunk_getLightFor,k=ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor;function T(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=()=>{};else ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=d;if(e.settings[1].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=()=>{};else ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=l;if(e.settings[2].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=()=>{};else ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=o;if(e.settings[3].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=g;if(e.settings[4].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=i;if(e.settings[5].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=m;if(e.settings[6].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=()=>{};else ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=u;if(e.settings[7].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=()=>{};else ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=r;if(e.settings[8].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=s;if(e.settings[9].toggled&&e.getEnabled())ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=()=>{},ModAPI.hooks.methods.nmw_World_checkLightFor=()=>!1,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=()=>15,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=()=>15;else ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=c,ModAPI.hooks.methods.nmw_World_checkLightFor=a,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=M,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=k}e.onUpdate=()=>{},e.onEnable=()=>{T()},e.onDisable=()=>{T()}}var X={};y(X,{init:()=>be});function be(e){let t=[{name:"Update Chunks",type:"Boolean",toggled:!0}],n={get(o,g){if(typeof o[g]==="object"&&o[g]!==null)return new Proxy(o[g],n);else return o[g]},set(o,g,i){return console.log(`Property ${String(g)} changed from ${o[g]} to ${i}`),o[g]=i,l(),!0}};e.settings=new Proxy(t,n);const d=ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks;function l(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=(...o)=>{setTimeout(function(){return d.apply(this,o)},1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=d}e.onUpdate=()=>{},e.onEnable=()=>{l()},e.onDisable=()=>{l()}}var q={};y(q,{init:()=>Se});function Se(e){e.settings=[{name:"Distance",type:"Slider",min:4,max:32,step:2,current:16},{name:"Ignore Players",type:"Boolean",toggled:!0}],e.onUpdate=()=>{if(e.getEnabled())ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)if(t.getDistanceSqToEntity(ModAPI.player.getRef())<e.settings[0].current*e.settings[0].current||t.getRef().constructor.name=="nmce_EntityOtherPlayerMP"&&e.settings[1].toggled)t.renderDistanceWeight=100;else t.renderDistanceWeight=0})},e.onEnable=()=>{},e.onDisable=()=>{ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)t.renderDistanceWeight=1})}}var D={};y(D,{init:()=>we});function we(e){e.onEnable=()=>{ModAPI.mc.gameSettings.renderDistanceChunks=0.5,ModAPI.mc.gameSettings.saveOptions(),e.disable()}}var Q={};y(Q,{init:()=>Ce});function Ce(e){const t=ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0;ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0=function(...n){if(e.getEnabled()){const d=ModAPI.util.jclStrToJsStr(ModAPI.mc.currentScreen.inputField.text1.getRef());if(d.startsWith("/l ")||d.startsWith("/login ")||d.startsWith("/reg ")||d.startsWith("/register "))ModAPI.mc.currentScreen.inputField.visible1=0;else ModAPI.mc.currentScreen.inputField.visible1=1}return t.apply(this,n)},e.onDisable=()=>{if(ModAPI.mc.currentScreen!=null){if(ModAPI.mc.currentScreen.inputField!=null)ModAPI.mc.currentScreen.inputField.visible1=1}}}var K={};y(K,{init:()=>ve});function ve(e){let t=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,n=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();e.settings=[];const d=ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox;class l{constructor(){if(e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=function(...o){ModAPI.hooks.methods.nlevo_GlStateManager_disableDepth(),d.apply(this,o),ModAPI.hooks.methods.nlevo_GlStateManager_enableDepth()};else ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=d}static onClick(){n.remove()}}e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.renderManager!=null)ModAPI.mc.renderManager.debugBoundingBox=1},e.onEnable=()=>{if(new l,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=1},e.onDisable=()=>{if(new l,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=0}}var J={};y(J,{init:()=>Re});function Re(e){let t=[{name:"Red",type:"Slider",min:0,max:1,step:0.1,current:v.r},{name:"Green",type:"Slider",min:0,max:1,step:0.1,current:v.g},{name:"Blue",type:"Slider",min:0,max:1,step:0.01,current:v.b},{name:"Alpha",type:"Slider",min:0,max:1,step:0.01,current:1}],n={get(i,m){if(typeof i[m]==="object"&&i[m]!==null)return new Proxy(i[m],n);else return i[m]},set(i,m,u){return i[m]=u,g(),!0}};e.settings=new Proxy(t,n);let d=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,l=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();const o=ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a;function g(){if(e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=function(...i){ModAPI.hooks.methods.nlevo_GlStateManager_color(t[0].current,t[1].current,t[2].current,t[3].current),o.apply(this,i),ModAPI.hooks.methods.nlevo_GlStateManager_color(1,1,1,1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=o}e.onEnable=()=>{g()},e.onDisable=()=>{g()}}var O={};y(O,{init:()=>Be});function Be(e){e.crshInter=null,e.settings=[{name:"Reach",type:"Slider",min:0,max:6,step:0.1,current:3},{name:"Ignore GUI",type:"Boolean",toggled:!1},{name:"Attack Delay (ms)",type:"Slider",min:125,max:500,step:5,current:125},{name:"Packet Look",type:"Boolean",toggled:!1},{name:"Packet Click",type:"Boolean",toggled:!0}];let t=0;const n=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1],d=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...o){if(e.settings[5].toggled&&e.getEnabled())e.disable();return d.apply(this,o)};const l=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...o){if(e.settings[5].toggled&&e.getEnabled())e.disable();return l.apply(this,o)},e.onUpdate=()=>{if(e.getEnabled())if(ModAPI.mc.theWorld){let o=!1;if(ModAPI.mc.currentScreen==null||e.settings[1].toggled)o=!1,ModAPI.world.loadedEntityList.array1.forEach((g)=>{if(g!=null){if(g.getRef().constructor.name=="nmce_EntityOtherPlayerMP"){if(!o){const{posX:i,posY:m,posZ:u}=g,r=i-ModAPI.player.posX,s=m-ModAPI.player.posY,c=u-ModAPI.player.posZ,a=Math.sqrt(r*r+c*c),M=Math.atan2(c,r)*180/Math.PI-90,k=-(Math.atan2(s,a)*180/Math.PI);if(a<=e.settings[0].current&&Math.abs(s)<=e.settings[0].current&&Date.now()-t>e.settings[2].current){if(o=!0,ModAPI.mc.pointedEntity!=null){if(ModAPI.mc.pointedEntity.getEntityId()!=g.getEntityId())if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(M,k,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=M,ModAPI.player.rotationPitch=k}else if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(M,k,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=M,ModAPI.player.rotationPitch=k;if(setTimeout(()=>{if(e.settings[4].toggled)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]()),ModAPI.network.addToSendQueue(ModAPI.reflect.getClassByName("C02PacketUseEntity").constructors[1](g.getRef(),ModAPI.hooks.methods.nmnpc_C02PacketUseEntity$Action_values().data[1]));else ModAPI.clickMouse()},1),e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,ModAPI.player.onGround))},1)}}}}})}else e.disable()},e.onEnable=()=>{},e.onDisable=()=>{}}var j={};y(j,{init:()=>Ge});function Ge(e){e.crshInter=null,e.settings=[{name:"TPS",type:"Slider",min:1,max:30,step:0.5,current:22}],e.toggleKey="KeyNone",e.onUpdate=()=>{if(ModAPI.mc.timer!=null&&e.getEnabled())ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onEnable=()=>{ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onDisable=()=>{ModAPI.mc.timer.ticksPerSecond=20}}var V={};y(V,{init:()=>Te});function Te(e){e.onUpdate=()=>{if(e.getEnabled())ModAPI.mc.rightClickDelayTimer=0}}var ee={};y(ee,{init:()=>Le});function Le(e){e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.mc.gameSettings.keyBindJump.isPressed())setTimeout(()=>{ModAPI.player.jump()},1)}}}var te={};y(te,{init:()=>Ne});function Ne(e){const t=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1];e.onUpdate=()=>{if(e.getEnabled()==!0){if(ModAPI.mc.theWorld!=null){if(ModAPI.player.fallDistance>2)setInterval(()=>{ModAPI.network.addToSendQueue(t(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,1))},1)}}else e.disable()}}var ne={};y(ne,{init:()=>Fe});function Fe(e){e.settings=[{name:"Distance",type:"Slider",min:1,max:3,step:1,current:1}],e.toggleKey="KeyB";const t=ModAPI.reflect.getClassByName("C07PacketPlayerDigging").constructors[1],n=ModAPI.hooks.methods.nmnpc_C07PacketPlayerDigging$Action_values().data[0],d=ModAPI.hooks.methods.nmnpc_C07PacketPlayerDigging$Action_values().data[2],l=ModAPI.reflect.getClassByName("BlockPos").constructors[0];let o=!1;e.onUpdate=()=>{setTimeout(()=>{let g=e.settings[0].current;if(e.getEnabled())if(ModAPI.mc.theWorld){for(let i=-g;i<g;i++)for(let m=-g;m<g;m++)for(let u=-g;u<g;u++)if(!o){if(ModAPI.world.getBlockState(l(i,m,u)).block.unlocalizedName!=null){if(ModAPI.util.jclStrToJsStr(ModAPI.world.getBlockState(l(ModAPI.player.posX+i,ModAPI.player.posY+m,ModAPI.player.posZ+u)).block.unlocalizedName.getRef())=="bed")o=!0,ModAPI.network.addToSendQueue(t(n,l(ModAPI.player.posX+i,ModAPI.player.posY+m,ModAPI.player.posZ+u),0)),ModAPI.network.addToSendQueue(t(d,l(ModAPI.player.posX+i,ModAPI.player.posY+m,ModAPI.player.posZ+u),0))}}}else e.disable();if(o)e.disable()},1)},e.onEnable=()=>{o=!1},e.onDisable=()=>{o=!1}}var oe={};y(oe,{init:()=>We});function We(e){e.toggleKey="KeyH";const t=ModAPI.reflect.getClassByName("BlockPos").constructors[0];let n=!1;e.onUpdate=()=>{if(e.getEnabled())setTimeout(()=>{if(ModAPI.world.isAirBlock(t(Math.floor(ModAPI.player.posX),ModAPI.player.posY-0.6,Math.floor(ModAPI.player.posZ)))&&ModAPI.player.onGround&&ModAPI.player.onGround)ModAPI.mc.gameSettings.keyBindSneak.pressed=1,n=!0;else if(n)n=!1,ModAPI.mc.gameSettings.keyBindSneak.pressed=0},1)},e.onDisable=()=>{ModAPI.mc.gameSettings.keyBindSneak.pressed=0}}var re={};y(re,{init:()=>$e});function $e(e){e.crshInter=null,e.settings=[{name:"Head Move Delay (ms)",type:"Slider",min:10,max:100,step:5,current:30},{name:"Disable On Death",type:"Boolean",toggled:!0},{name:"Head Snaps",type:"Slider",min:2,max:5,step:1,current:3},{name:"Horizontal Random (ms)",type:"Slider",min:5,max:50,step:5,current:25}],e.toggleKey="KeyN";let t=0;const n=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1],d=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...l){if(e.settings[1].toggled&&e.getEnabled())e.disable();return d.apply(this,l)},e.onUpdate=()=>{if(e.getEnabled())if(ModAPI.mc.theWorld){let l=!1;l=!1,ModAPI.world.loadedEntityList.array1.forEach((o)=>{if(o!=null){if(o.getRef().constructor.name=="nmce_EntityOtherPlayerMP"){if(!l){const{posX:g,posY:i,posZ:m}=o,u=g-ModAPI.player.posX,r=i-ModAPI.player.posY,s=m-ModAPI.player.posZ,c=Math.sqrt(u*u+s*s),a=Math.atan2(s,u)*180/Math.PI-90,M=-(Math.atan2(r,c)*180/Math.PI);if(Date.now()-t>e.settings[2].current*e.settings[0].current&&c<=3&&Math.abs(r)<=3&&ModAPI.mc.pointedEntity==null){t=Date.now();const k=e.settings[0].current,T=ModAPI.hooks.methods.nmu_MathHelper_wrapAngleTo180_float(a-ModAPI.hooks.methods.nmu_MathHelper_wrapAngleTo180_float(ModAPI.player.rotationYaw));let E=0;console.log(e.settings[2].current);for(let C=0;E<e.settings[2].current;E++)setTimeout(()=>{ModAPI.player.rotationYaw+=T/e.settings[2].current+Math.random()-0.5},k*E+Math.random()*e.settings[3].current);ModAPI.player.rotationPitch=M+Math.random()*5-2.5,l=!0}}}}})}else e.disable()},e.onEnable=()=>{},e.onDisable=()=>{}}function P(e){this.enabledDONOTUSE=!1,this.init=function(){},this.onEnable=function(){},this.onDisable=function(){},this.enable=function(){this.enabledDONOTUSE=!0,this.onEnable(),R("enable")},this.disable=function(){this.enabledDONOTUSE=!1,this.onDisable(),R("disable")},this.onKey=function(t){},this.onMCKey=function(t){},this.getEnabled=function(){return this.enabledDONOTUSE},this.toggle=function(){if(this.enabledDONOTUSE=!this.enabledDONOTUSE,this.enabledDONOTUSE)this.onEnable();else this.onDisable()},this.onUpdate=function(){},this.onFrame=()=>{},this.toggleKey="KeyNone",this.alert=function(){alert()},this.settings=[],e.init(this)}var W={movement:"Movement",player:"Player",render:"Render",fun:"Fun"},h={arraylist:{name:"Array List",function:new P(Y),category:"Render",description:"Shows your enabled mods"},minimap:{name:"Mini Map",function:new P(z),category:"Render",description:"Shows nearby entities"},renderdisabler:{name:"Render Disabler",function:new P(Z),category:"Render",description:"Disable some renders and get more fps"},asyncevents:{name:"Async Events",function:new P(X),category:"Render",description:"Asynchronize intensive events, not supported with shaders and VERY buggy. Best for pvp serveres"},entitydistance:{name:"Entity Distance",function:new P(q),category:"Render",description:"Lowers entity distance to improve performance"},onerenderdistance:{name:"True One Chunk",function:new P(D),category:"Render",description:"Actual one chunk render distance"},passwordhider:{name:"Password Hider",function:new P(Q),category:"Render",description:"Hides password when typing it in"},esp:{name:"ESP",function:new P(K),category:"Render",description:"Shows entities through walls"},outline:{name:"Custom Outline",function:new P(J),category:"Render",description:"Change the color of the properties of the block outline"},killaura:{name:"Kill Aura",function:new P(O),category:"Combat",description:"Attack players around you"},aimassist:{name:"Aim Assist",function:new P(re),category:"Combat",description:"Helps you aim"},step:{name:"Step",function:new P(U),category:"Movement",description:"Allows you to step higher"},safewalk:{name:"Safe Walk",function:new P(oe),category:"Movement",description:"Shift at ledges of blocks"},timer:{name:"Timer",function:new P(j),category:"Player",description:"Modify client side tps"},fastplace:{name:"Fast Place",function:new P(V),category:"Player",description:"Allows you to place blocks fast"},airjump:{name:"Air Jump",function:new P(ee),category:"Player",description:"Allows you to jump even if you are not on the ground"},nofall:{name:"No Fall",function:new P(te),category:"Player",description:"You won't take any fall damage"},bednuker:{name:"Bed Nuker",function:new P(ne),category:"Player",description:"Destroy beds through defenses"},servercrasher:{name:"Server Crasher",function:new P(H),category:"Exploit",description:"Sends just a few swing packets ;)"}};function He(){if(document.getElementById("ui")!=null)document.getElementById("ui").remove();if(ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=ze,ModAPI.mc.currentScreen.getRef().constructor.name==="nmcg_GuiIngameMenu")ModAPI.mc.displayGuiScreen(null)}function _(){if(document.getElementById("ui")==null)return!1;else return!0}function Ye(e){const t=e.function.settings;console.log(t);const n=document.createElement("div");n.className="setting",n.style.position="absolute",n.style.color="white",n.style.backdropFilter="blur(8px)",n.style.background="rgba(0,0,0,0.5)",n.style.borderRadius="15px",n.style.padding="15px",n.style.fontFamily="monospace",n.style.overflowX="hidden",n.style.overflowX="auto",n.style.width="15%",n.style.height="50%",n.style.top="100px",n.style.left="100px",n.style.userSelect="none",n.style.zIndex="1000",n.style.backdropFilter="blur(8px)",n.style.resize="both";const d=document.createElement("div");d.innerText=e.name,d.style.fontSize="22px",n.appendChild(d);const l=document.createElement("div");l.innerText="X",l.style.fontSize="28px",l.style.position="absolute",l.style.right="15px",l.style.top="10px",l.style.cursor="pointer",l.onclick=function(){n.remove()},n.appendChild(l);const o=n;function g({movementX:u,movementY:r}){let s=window.getComputedStyle(o),c=parseInt(s.left),a=parseInt(s.top);o.style.left=`${c+u}px`,o.style.top=`${a+r}px`}d.addEventListener("mousedown",()=>{window.addEventListener("mousemove",g)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",g)}),document.body.appendChild(n);const i=document.createElement("button");i.innerText="Toggle",i.style.border="none",i.style.color="#FFF",i.style.background="rgba(100,100,100,0.5)",i.style.width="100%",i.style.margin="5px",i.style.borderRadius="10px",i.style.fontSize="18px",i.style.padding="10px 5px 10px 5px",i.onclick=()=>{e.function.toggle(),R("toggle")},n.appendChild(i);const m=document.createElement("button");if(e.function.toggleKey!=null)m.innerText=e.function.toggleKey;else m.innerText="No key set";m.style.border="none",m.style.color="#FFF",m.style.background="rgba(100,100,100,0.5)",m.style.width="100%",m.style.margin="5px",m.style.borderRadius="10px",m.style.fontSize="18px",m.style.padding="10px 0px 10px 0px",m.onclick=()=>{m.innerText="Press any key or esc...",window.addEventListener("keydown",u);function u(r){if(r.code=="Escape")e.function.toggleKey="KeyNone";else e.function.toggleKey=r.code;m.innerText=e.function.toggleKey,window.removeEventListener("keydown",u)}},n.appendChild(m);for(let u in t)if(t.hasOwnProperty(u)){const r=t[u],s=document.createElement("div");if(s.style.background="rgba(100,100,100,0.5)",s.style.margin="5px",s.style.padding="5px",s.style.borderRadius="10px",n.appendChild(s),r.type=="List"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${r.name} - ${r.current}`,s.appendChild(c);const a=document.createElement("select");a.onchange=()=>{r.current=parseInt(a.value),c.innerText=`${r.name} - ${r.current}`};for(let M in r.modes){if(r.modes.hasOwnProperty(M)){const k=document.createElement("option");k.innerText=r.modes[M],k.value=`${M}`}s.appendChild(a)}}else if(r.type=="Slider"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${r.name} - ${r.current}`,s.appendChild(c);const a=document.createElement("input");a.type="range",a.style.width="100%",a.step=r.step,a.min=r.min,a.max=r.max,a.value=r.current,a.onchange=()=>{r.current=parseFloat(a.value),c.innerText=`${r.name} - ${r.current}`},s.appendChild(a)}else if(r.type=="Boolean"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${r.name} - ${r.toggled}`,s.appendChild(c);const a=document.createElement("input");a.type="checkbox",a.checked=r.toggled,a.onchange=()=>{r.toggled=a.checked,c.innerText=`${r.name} - ${r.toggled}`},s.appendChild(a)}else if(r.type=="Color"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${r.name} - ${r.current}`,s.appendChild(c);const a=document.createElement("input");a.type="color",a.value=r.current,a.onchange=()=>{r.current=a.value,c.innerText=`${r.name} - ${r.current}`},s.appendChild(a)}}}function ie(){ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=()=>{},document.exitPointerLock();const e=N,t=document.createElement("div");t.style.animation="fade-in 0.5s",t.id="ui",t.style.position="fixed",t.style.width="66%",t.style.height="66%",t.style.top=`${document.body.clientHeight*0.165}px`,t.style.left=`${document.body.clientWidth*0.165}px`,t.style.color="white",t.style.backdropFilter="blur(8px)",t.style.background="rgba(0,0,0,0.75)",t.style.borderRadius="15px",t.style.padding="15px",t.style.fontFamily="monospace",t.style.overflowY="hidden",t.style.userSelect="none",t.style.zIndex="1000",document.body.appendChild(t);const n=document.createElement("div");n.innerText=e,n.style.fontSize="24px",n.style.margin="5px",t.appendChild(n);const d=document.createElement("input");d.style.width="33%",d.type="text",d.style.border="solid 2px rgba(200,200,200,0.5)",d.style.borderRadius="10px",d.style.color="rgba(255,255,255,1)",d.style.display="inline-block",d.style.padding="8px",d.style.marginLeft="20px",d.style.fontSize="22px",d.style.background="rgba(50,50,50,.24)",d.placeholder="\uD83D\uDD0E\uFE0E Search",d.style.backdropFilter="blur(8px)";const l=document.createElement("div");l.innerText="X",l.style.fontSize="28px",l.style.position="absolute",l.style.right="15px",l.style.top="10px",l.style.cursor="pointer",l.onclick=function(){He()},t.appendChild(l);const o=document.createElement("div");o.style.overflowX="scroll",t.appendChild(o);for(let g in W)if(W.hasOwnProperty(g)){const i=document.createElement("div");i.innerText=W[g],i.style.fontSize="18px",i.style.cursor="pointer",i.style.display="inline-block",i.style.padding="10px",i.style.margin="5px",i.style.background="rgba(100,100,100,0.5)",i.style.borderRadius="5px",i.onclick=()=>{}}B=document.createElement("center"),B.style.height="90%",B.style.overflowY="scroll",t.appendChild(B),R("ui")}function R(e){if(console.log(e),_()){B.innerHTML="";for(let t in h)if(h.hasOwnProperty(t)){const n=document.createElement("div");n.addEventListener("click",(o)=>{console.log(h[t]),h[t].function.toggle(),R("modl")});const d=document.createElement("div");d.innerText=`${h[t].name}`,d.style.fontSize="22px",d.style.fontWeight="bold",n.appendChild(d),n.appendChild(document.createElement("hr"));const l=document.createElement("div");if(l.innerText=`${h[t].description}`,n.appendChild(l),n.style.textAlign="left",n.style.display="inline-block",n.style.overflowX="hidden",n.style.width="25%",n.style.height="25%",n.style.padding="5px",n.style.borderRadius="15px",n.style.margin="10px",n.style.cursor="pointer",n.style.overflowY="scroll",n.style.background="rgba(100,100,100,0.5)",h[t].function.getEnabled())n.style.boxShadow=`0px 0px 15px ${S}`;n.oncontextmenu=(o)=>{o.preventDefault(),new Ye(h[t]),console.log(h[t])},B.appendChild(n)}}}function ye(e){if(e.code=="ShiftRight"){if(!_())ie()}if(ModAPI.mc.currentScreen==null&&ModAPI.mc.ingameGUI!=null){for(let t in h)if(e.code==h[t].function.toggleKey)h[t].function.toggle()}}var B,ze=ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen;function Pe(){f.style.animation="",f.style.opacity="1",f.style.display="block"}function G(){setTimeout(()=>{f.style.animation="fade-out 0.5s linear",setTimeout(()=>{f.style.opacity="0",f.style.display="none"},450)},100)}ModAPI.meta.title("Justin v2");ModAPI.meta.credits("Murturtle");ModAPI.meta.description("Press right shift ;)");ModAPI.require("player");ModAPI.require("network");ModAPI.require("settings");ModAPI.require("world");h.arraylist.function.enable();h.minimap.function.enable();h.renderdisabler.function.enable();h.passwordhider.function.enable();h.asyncevents.function.enable();h.outline.function.enable();var Ze=ModAPI.hooks.methods.nmcg_GuiMainMenu_initGui;ModAPI.hooks.methods.nmcg_GuiMainMenu_initGui=function(...e){return Pe(),setTimeout(()=>{if(ModAPI.mc.currentScreen!=null)if(ModAPI.mc.currentScreen.getRef().constructor.name=="nmcg_GuiMainMenu"&&f.style.display=="block")console.log(ModAPI.mc.currentScreen.getRef().constructor.name);else G();else G()},250),Ze.apply(this,e)};var Xe=ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen;ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen=function(...e){return Pe(),Xe.apply(this,e)};var f=document.createElement("div");f.style.position="fixed";f.style.top="0";f.style.left="0";f.style.bottom="0";f.style.left="0";f.style.background="rgba(50,50,50,1)";f.style.width="100%";f.style.height="100%";f.style.fontFamily="monospace";f.style.display="none";document.body.appendChild(f);var x=document.createElement("div");x.innerText=ue;x.style.textShadow=`${S} 3px 3px 0px`;x.style.color="white";x.style.display="flex";x.style.justifyContent="center";x.style.fontSize="5em";x.style.marginTop="10%";f.appendChild(x);var $=document.createElement("div");$.style.fontSize=".2em";$.innerText=he;$.style.textShadow="none";x.appendChild($);var A=document.createElement("div");A.style.background="rgba(100,100,100,1)";A.style.position="fixed";A.style.width="25%";A.style.left="20%";A.style.padding="10px";A.style.borderRadius="15px";A.style.top="60%";A.style.transform="translate(0,-50%)";f.appendChild(A);var I=document.createElement("button");I.style.background="rgba(50,50,50,1)";I.style.fontFamily="monospace";I.style.color="white";I.style.width="100%";I.style.border="none";I.style.borderRadius="10px";I.style.padding="15px";I.style.textAlign="left";I.style.fontSize="1.5em";I.style.marginTop="7px";I.style.marginBottom="7px";var le=I.cloneNode();le.innerText="Singleplayer";A.appendChild(le);le.onclick=()=>{ModAPI.mc.displayGuiScreen(ModAPI.reflect.getClassByName("GuiScreenIntegratedServerStartup").constructors[0](ModAPI.mc.currentScreen.getRef())),G()};var se=I.cloneNode();se.innerText="Multiplayer";se.onclick=()=>{ModAPI.mc.displayGuiScreen(ModAPI.reflect.getClassByName("GuiMultiplayer").constructors[0](ModAPI.mc.currentScreen.getRef())),G()};A.appendChild(se);var ae=I.cloneNode();ae.innerText="Options";ae.onclick=()=>{ModAPI.mc.displayGuiScreen(ModAPI.reflect.getClassByName("GuiOptions").constructors[0](ModAPI.mc.currentScreen.getRef(),ModAPI.mc.gameSettings.getRef())),G()};A.appendChild(ae);var ce=I.cloneNode();ce.innerText="Edit Profile";ce.onclick=()=>{ModAPI.mc.displayGuiScreen(ModAPI.reflect.getClassByName("GuiScreenEditProfile").constructors[0](ModAPI.mc.currentScreen.getRef())),G()};A.appendChild(ce);var p=document.createElement("div");p.style.background="rgba(100,100,100,1)";p.style.position="fixed";p.style.width="25%";p.style.padding="10px";p.style.borderRadius="15px";p.style.top="60%";p.style.transform="translate(0,-50%)";p.style.right="20%";f.appendChild(p);var ge=I.cloneNode();ge.innerText="Click Gui";ge.onclick=()=>{if(!_())ie()};p.appendChild(ge);var L=I.cloneNode();L.innerText="Downloads";L.style.overflowX="auto";L.style.overFlowY="auto";L.onclick=()=>{alert(fe)};p.appendChild(L);var me=I.cloneNode();me.innerText="Exit";me.onclick=()=>{window.location.replace("https://google.com")};p.appendChild(me);var w=document.createElement("div"),de="Created By: ";F.forEach((e)=>{if(e==F[F.length-1])de+=e;else de+=`${e} & `});w.innerText=de;w.style.position="fixed";w.style.bottom="0";w.style.left="0";w.style.color=S;w.style.fontSize="1.5em";f.appendChild(w);w.st;document.addEventListener("keydown",ye);ModAPI.addEventListener("update",()=>{for(let e in h)if(h.hasOwnProperty(e))h[e].function.onUpdate()});document.body.appendChild(document.createElement("style"));var b=document.styleSheets[0];b.insertRule(`
    @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
    }
    `);b.insertRule(`
    @keyframes fade-out {
    0% { opacity: 1; }
    100% { opacity: 0; }
    }
    `);b.insertRule(`
    ::-webkit-scrollbar {
      width: 10px;
    }`);b.insertRule(`
::-webkit-scrollbar-track {
    background: rgba(0,0,0,0);
}`);b.insertRule(`
::-webkit-scrollbar-thumb {
background: rgba(100,100,100,0.5);
filter: blur(4px);
}`);b.insertRule(`::-webkit-resizer {
  background: rgba(0,0,0,0);
  opacity:0;
  display:none;
}`);b.insertRule(`
::-webkit-scrollbar-corner{
  background: rgba(0,0,0,0);
  opacity:0;
  display:none;
}`);b.insertRule(`@keyframes rgb {
    0% { box-shadow: 0px 0px 40px rgba(255, 0, 0,0.75); }
    16% { box-shadow: 0px 0px 40px rgba(255, 255, 0,0.75); }
    33% { box-shadow: 0px 0px 40px rgba(0, 255, 0,0.75); }
    50% { box-shadow: 0px 0px 40px rgba(0, 255, 255,0.75); }
    66% { box-shadow: 0px 0px 40px rgba(0, 0, 255,0.75); }
    83% { box-shadow: 0px 0px 40px rgba(255, 0, 255,0.75); }
    100% { box-shadow: 0px 0px 40px rgba(255, 0, 0,0.75); }
}`);b.insertRule(`@keyframes rgbtext {
    0% { color: rgba(255, 0, 0,0.75); }
    16% { color: rgba(255, 255, 0,0.75); }
    33% { color: rgba(0, 255, 0,0.75); }
    50% { color: rgba(0, 255, 255,0.75); }
    66% { color: rgba(0, 0, 255,0.75); }
    83% { color: rgba(255, 0, 255,0.75); }
    100% { color: rgba(255, 0, 0,0.75); }
}`);

//# debugId=EA95BBEFCFDF670B64756E2164756E21
//# sourceMappingURL=data:application/json;base64,
