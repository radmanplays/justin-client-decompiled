var q=Object.defineProperty;var P=(e,n)=>{for(var t in n)q(e,t,{get:n[t],enumerable:!0,configurable:!0,set:(r)=>n[t]=()=>r})};function j(e){var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:{r:255,g:255,b:255}}var C="Justin Client v2",S="#00c3ff",y=j(S),_e={r:Math.round((y.r/255+Number.EPSILON)*100)/100,g:Math.round((y.g/255+Number.EPSILON)*100)/100,b:Math.round((y.b/255+Number.EPSILON)*100)/100};var v={};P(v,{init:()=>V});function V(e){e.settings=[{name:"Height",type:"Slider",min:1,max:6,step:0.5,current:1.5}],e.onUpdate=function(){if(e.getEnabled()){if(ModAPI.player.stepHeight!=e.settings[0].current)ModAPI.player.stepHeight=e.settings[0].current}},e.onEnable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=e.settings[0].current},e.onDisable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=0.6000000238418579}}var B={};P(B,{init:()=>O});function O(e){e.crshInter=null,e.settings=[{name:"PPS",type:"Slider",min:20,max:20000,step:10,current:5000}];function n(){if(ModAPI.player!=null)for(let t=0;t<e.settings[0].current;t++)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]());else e.disable()}e.onEnable=function(){e.crshInter=setInterval(n,1000)},e.onDisable=function(){if(e.crshInter!=null)clearInterval(e.crshInter)}}var T={};P(T,{init:()=>ee});function ee(e){function n(o,a){if(o===a)return!0;if(o==null||a==null)return!1;if(o.length!==a.length)return!1;for(let c=0;c<o.length;++c)if(o[c]!==a[c])return!1;return!0}const t=(o)=>{let a=0;o.split("").forEach((l)=>{a=l.charCodeAt(0)+((a<<5)-a)});let c="#";for(let l=0;l<3;l++){const u=a>>l*8&255;c+=u.toString(16).padStart(2,"0")}return c};function r(o,a){return a=a||2,(new Array(a).join("0")+o).slice(-a)}function s(o){if(o.indexOf("#")===0)o=o.slice(1);if(o.length===3)o=o[0]+o[0]+o[1]+o[1]+o[2]+o[2];if(o.length!==6)throw new Error("Invalid HEX color.");const a=(255-parseInt(o.slice(0,2),16)).toString(16),c=(255-parseInt(o.slice(2,4),16)).toString(16),l=(255-parseInt(o.slice(4,6),16)).toString(16);return`#${r(a,2)}${r(c,2)}${r(l,2)}`}let d=document.createElement("div");d.style.position="fixed",d.style.right="0",d.style.top="0",d.style.background="#000",d.style.color="#FFF",d.style.zIndex="100",d.style.backdropFilter="blur(8px)",d.style.background="rgba(0,0,0,0.5)",d.style.borderRadius="15px",d.style.padding="10px",d.style.fontFamily="monospace",d.style.textAlign="right",d.style.fontSize="18px",d.style.userSelect="none",d.style.pointerEvents="none",document.body.appendChild(d),d.hidden=!0;let m=[],i=[];const g=d;function h({movementX:o,movementY:a}){let c=window.getComputedStyle(g),l=parseInt(c.right),u=parseInt(c.top);g.style.right=`${l-o}px`,g.style.top=`${u+a}px`}g.addEventListener("mousedown",()=>{window.addEventListener("mousemove",h)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",h)}),e.onUpdate=()=>{setTimeout(()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||A()&&e.getEnabled()){if(A())d.style.pointerEvents="auto";else d.style.pointerEvents="none";d.hidden=!1,i=[];for(var o in f)i.push(f[o].function.getEnabled());if(n(m,i));else{d.innerText="";const a=document.createElement("div");a.innerText=C,a.style.fontWeight="bold",d.appendChild(a);for(var o in f)if(f[o].function.getEnabled()){const l=document.createElement("div");l.innerText=f[o].name,l.style.color=S,d.appendChild(l)}m=i}}else d.hidden=!0},1)},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)d.hidden=!0,d.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)d.hidden=!1},e.onDisable=()=>{d.hidden=!0}}var b={};P(b,{init:()=>ne});function ne(e){e.settings=[{name:"Friendly Color",type:"Color",current:"#0000ff"},{name:"Enemy Color",type:"Color",current:"#ff0000"},{name:"Neutral Color",type:"Color",current:"#ffff00"}];let n=document.createElement("canvas");n.style.position="fixed",n.style.right="0",n.style.bottom="0",n.style.color="#FFF",n.style.zIndex="100",n.width=200,n.height=200,n.style.background="rgba(0,0,0,0.5)",n.style.borderRadius="100%",n.style.margin="10px",n.style.fontFamily="monospace",n.style.pointerEvents="none",n.style.userSelect="none",document.body.appendChild(n),n.hidden=!0;let t=n.getContext("2d"),r=n;function s({movementX:d,movementY:m}){let i=window.getComputedStyle(r),g=parseInt(i.left),h=parseInt(i.top);r.style.left=`${g+d}px`,r.style.top=`${h+m}px`}r.addEventListener("mousedown",()=>{window.addEventListener("mousemove",s)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",s)}),e.onUpdate=()=>{setTimeout(()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||A()&&e.getEnabled()){if(A())n.style.pointerEvents="auto";else n.style.pointerEvents="none";if(n.hidden=!1,t.clearRect(0,0,200,200),ModAPI.mc.theWorld!=null)ModAPI.world.loadedEntityList.array1.forEach((d)=>{if(d!=null){const m=ModAPI.player.posX-d.posX+100,i=ModAPI.player.posZ-d.posZ+100;if(d.getRef().constructor.name=="nmce_EntityOtherPlayerMP")t.fillStyle=e.settings[1].current;else t.fillStyle=e.settings[2].current;t.fillRect(m-2.5,i-2.5,5,5)}}),t.fillStyle=e.settings[0].current,t.fillRect(97.5,97.5,5,5)}else n.hidden=!0},1)},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)n.hidden=!0,n.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)n.hidden=!1},e.onDisable=()=>{n.hidden=!0}}var L={};P(L,{init:()=>te});function te(e){let n=[{name:"Particles",type:"Boolean",toggled:!0},{name:"Entities",type:"Boolean",toggled:!1},{name:"Weather",type:"Boolean",toggled:!0},{name:"Enchantment Book",type:"Boolean",toggled:!0},{name:"Beacon Beam",type:"Boolean",toggled:!1},{name:"Scoreboard",type:"Boolean",toggled:!1},{name:"Nametags",type:"Boolean",toggled:!1},{name:"Armor",type:"Boolean",toggled:!1},{name:"In Game Overlay",type:"Boolean",toggled:!1},{name:"Lighting",type:"Boolean",toggled:!1}],t={get(E,_){if(typeof E[_]==="object"&&E[_]!==null)return new Proxy(E[_],t);else return E[_]},set(E,_,J){return E[_]=J,R(),!0}};e.settings=new Proxy(n,t);const r=ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles,s=ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity,d=ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow,m=ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt,i=ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt,g=ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard,h=ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName,o=ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer,a=ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay,c=ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting,l=ModAPI.hooks.methods.nmw_World_checkLightFor,u=ModAPI.hooks.methods.nmwc_Chunk_getLightFor,x=ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor;function R(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=()=>{};else ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=r;if(e.settings[1].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=()=>{};else ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=s;if(e.settings[2].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=()=>{};else ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=d;if(e.settings[3].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=m;if(e.settings[4].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=i;if(e.settings[5].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=g;if(e.settings[6].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=()=>{};else ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=h;if(e.settings[7].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=()=>{};else ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=o;if(e.settings[8].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=a;if(e.settings[9].toggled&&e.getEnabled())ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=()=>{},ModAPI.hooks.methods.nmw_World_checkLightFor=()=>!1,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=()=>15,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=()=>15;else ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=c,ModAPI.hooks.methods.nmw_World_checkLightFor=l,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=u,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=x}e.onUpdate=()=>{},e.onEnable=()=>{R()},e.onDisable=()=>{R()}}var G={};P(G,{init:()=>oe});function oe(e){let n=[{name:"Update Chunks",type:"Boolean",toggled:!0}],t={get(d,m){if(typeof d[m]==="object"&&d[m]!==null)return new Proxy(d[m],t);else return d[m]},set(d,m,i){return console.log(`Property ${String(m)} changed from ${d[m]} to ${i}`),d[m]=i,s(),!0}};e.settings=new Proxy(n,t);const r=ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks;function s(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=(...d)=>{setTimeout(function(){return r.apply(this,d)},1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=r}e.onUpdate=()=>{},e.onEnable=()=>{s()},e.onDisable=()=>{s()}}var F={};P(F,{init:()=>de});function de(e){e.settings=[{name:"Distance",type:"Slider",min:4,max:32,step:2,current:16},{name:"Ignore Players",type:"Boolean",toggled:!0}],e.onUpdate=()=>{if(e.getEnabled())ModAPI.world.loadedEntityList.array1.forEach((n)=>{if(n!=null)if(n.getDistanceSqToEntity(ModAPI.player.getRef())<e.settings[0].current*e.settings[0].current||n.getRef().constructor.name=="nmce_EntityOtherPlayerMP"&&e.settings[1].toggled)n.renderDistanceWeight=100;else n.renderDistanceWeight=0})},e.onEnable=()=>{},e.onDisable=()=>{ModAPI.world.loadedEntityList.array1.forEach((n)=>{if(n!=null)n.renderDistanceWeight=1})}}var W={};P(W,{init:()=>ie});function ie(e){e.onEnable=()=>{ModAPI.mc.gameSettings.renderDistanceChunks=0.5,ModAPI.mc.gameSettings.saveOptions(),e.disable()}}var N={};P(N,{init:()=>re});function re(e){const n=ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0;ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0=function(...t){if(e.getEnabled()){const r=ModAPI.util.jclStrToJsStr(ModAPI.mc.currentScreen.inputField.text1.getRef());if(r.startsWith("/l ")||r.startsWith("/login ")||r.startsWith("/reg ")||r.startsWith("/register "))ModAPI.mc.currentScreen.inputField.visible1=0;else ModAPI.mc.currentScreen.inputField.visible1=1}return n.apply(this,t)},e.onDisable=()=>{if(ModAPI.mc.currentScreen!=null){if(ModAPI.mc.currentScreen.inputField!=null)ModAPI.mc.currentScreen.inputField.visible1=1}}}var U={};P(U,{init:()=>le});function le(e){let n=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,t=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();e.settings=[];const r=ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox;class s{constructor(){if(e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=function(...d){ModAPI.hooks.methods.nlevo_GlStateManager_disableDepth(),r.apply(this,d),ModAPI.hooks.methods.nlevo_GlStateManager_enableDepth()};else ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=r}static onClick(){t.remove()}}e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.renderManager!=null)ModAPI.mc.renderManager.debugBoundingBox=1},e.onEnable=()=>{if(new s,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=1},e.onDisable=()=>{if(new s,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=0}}var $={};P($,{init:()=>se});function se(e){let n=[{name:"Red",type:"Slider",min:0,max:1,step:0.1,current:y.r},{name:"Green",type:"Slider",min:0,max:1,step:0.1,current:y.g},{name:"Blue",type:"Slider",min:0,max:1,step:0.01,current:y.b},{name:"Alpha",type:"Slider",min:0,max:1,step:0.01,current:1}],t={get(i,g){if(typeof i[g]==="object"&&i[g]!==null)return new Proxy(i[g],t);else return i[g]},set(i,g,h){return i[g]=h,m(),!0}};e.settings=new Proxy(n,t);let r=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,s=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();const d=ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a;function m(){if(e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=function(...i){ModAPI.hooks.methods.nlevo_GlStateManager_color(n[0].current,n[1].current,n[2].current,n[3].current),d.apply(this,i),ModAPI.hooks.methods.nlevo_GlStateManager_color(1,1,1,1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=d}e.onEnable=()=>{m()},e.onDisable=()=>{m()}}var H={};P(H,{init:()=>ae});function ae(e){e.crshInter=null,e.settings=[{name:"Reach",type:"Slider",min:0,max:6,step:0.1,current:3},{name:"Ignore GUI",type:"Boolean",toggled:!1},{name:"Attack Delay (ms)",type:"Slider",min:125,max:500,step:5,current:125},{name:"Packet Look",type:"Boolean",toggled:!1},{name:"Packet Click",type:"Boolean",toggled:!1},{name:"Disable On Death",type:"Boolean",toggled:!0}],e.toggleKey="KeyN";let n=0;const t=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1],r=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...s){if(e.settings[5].toggled&&e.getEnabled())e.disable();return r.apply(this,s)},e.onUpdate=()=>{if(e.getEnabled())if(ModAPI.mc.theWorld){let s=!1;if(ModAPI.mc.currentScreen==null||e.settings[1].toggled)s=!1,ModAPI.world.loadedEntityList.array1.forEach((d)=>{if(d!=null){if(d.getRef().constructor.name=="nmce_EntityOtherPlayerMP"){if(!s){const{posX:m,posY:i,posZ:g}=d,h=m-ModAPI.player.posX,o=i-ModAPI.player.posY,a=g-ModAPI.player.posZ,c=Math.sqrt(h*h+a*a),l=Math.atan2(a,h)*180/Math.PI-90,u=-(Math.atan2(o,c)*180/Math.PI);if(c<=e.settings[0].current&&Math.abs(o)<=e.settings[0].current&&Date.now()-n>e.settings[2].current){if(s=!0,ModAPI.mc.pointedEntity!=null){if(ModAPI.mc.pointedEntity.getEntityId()!=d.getEntityId())if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(t(l,u,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=l,ModAPI.player.rotationPitch=u}else if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(t(l,u,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=l,ModAPI.player.rotationPitch=u;if(setTimeout(()=>{if(e.settings[4].toggled)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]()),ModAPI.network.addToSendQueue(ModAPI.reflect.getClassByName("C02PacketUseEntity").constructors[1](d.getRef(),ModAPI.hooks.methods.nmnpc_C02PacketUseEntity$Action_values().data[1]));else ModAPI.clickMouse()},1),e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(t(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,ModAPI.player.onGround))},1)}}}}})}else e.disable()},e.onEnable=()=>{},e.onDisable=()=>{}}var Q={};P(Q,{init:()=>ce});function ce(e){e.crshInter=null,e.settings=[{name:"TPS",type:"Slider",min:1,max:30,step:0.5,current:22}],e.toggleKey="KeyNone",e.onUpdate=()=>{if(ModAPI.mc.timer!=null&&e.getEnabled())ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onEnable=()=>{ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onDisable=()=>{ModAPI.mc.timer.ticksPerSecond=20}}var Z={};P(Z,{init:()=>ge});function ge(e){e.onUpdate=()=>{if(e.getEnabled())ModAPI.mc.rightClickDelayTimer=0}}var Y={};P(Y,{init:()=>me});function me(e){e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.mc.gameSettings.keyBindJump.isPressed())setTimeout(()=>{ModAPI.player.jump()},1)}}}var z={};P(z,{init:()=>he});function he(e){const n=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1];e.onUpdate=()=>{if(e.getEnabled()==!0){if(ModAPI.mc.theWorld!=null){if(ModAPI.player.fallDistance>2)setInterval(()=>{ModAPI.network.addToSendQueue(n(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,1))},1)}}else e.disable()}}var X={};P(X,{init:()=>fe});function fe(e){e.settings=[{name:"Distance",type:"Slider",min:1,max:3,step:1,current:1}],e.toggleKey="KeyB";const n=ModAPI.reflect.getClassByName("C07PacketPlayerDigging").constructors[1],t=ModAPI.hooks.methods.nmnpc_C07PacketPlayerDigging$Action_values().data[0],r=ModAPI.hooks.methods.nmnpc_C07PacketPlayerDigging$Action_values().data[2],s=ModAPI.reflect.getClassByName("BlockPos").constructors[0];let d=!1;e.onUpdate=()=>{setTimeout(()=>{let m=e.settings[0].current;if(e.getEnabled())if(ModAPI.mc.theWorld){for(let i=-m;i<m;i++)for(let g=-m;g<m;g++)for(let h=-m;h<m;h++)if(!d){if(ModAPI.world.getBlockState(s(i,g,h)).block.unlocalizedName!=null){if(ModAPI.util.jclStrToJsStr(ModAPI.world.getBlockState(s(ModAPI.player.posX+i,ModAPI.player.posY+g,ModAPI.player.posZ+h)).block.unlocalizedName.getRef())=="bed")d=!0,ModAPI.network.addToSendQueue(n(t,s(ModAPI.player.posX+i,ModAPI.player.posY+g,ModAPI.player.posZ+h),0)),ModAPI.network.addToSendQueue(n(r,s(ModAPI.player.posX+i,ModAPI.player.posY+g,ModAPI.player.posZ+h),0))}}}else e.disable();if(d)e.disable()},1)},e.onEnable=()=>{d=!1},e.onDisable=()=>{d=!1}}function I(e){this.enabledDONOTUSE=!1,this.init=function(){},this.onEnable=function(){},this.onDisable=function(){},this.enable=function(){this.enabledDONOTUSE=!0,this.onEnable(),k("enable")},this.disable=function(){this.enabledDONOTUSE=!1,this.onDisable(),k("disable")},this.onKey=function(n){},this.onMCKey=function(n){},this.getEnabled=function(){return this.enabledDONOTUSE},this.toggle=function(){if(this.enabledDONOTUSE=!this.enabledDONOTUSE,this.enabledDONOTUSE)this.onEnable();else this.onDisable()},this.onUpdate=function(){},this.onFrame=()=>{},this.toggleKey="KeyNone",this.alert=function(){alert()},this.settings=[],e.init(this)}var w={movement:"Movement",player:"Player",render:"Render",fun:"Fun"},f={arraylist:{name:"Array List",function:new I(T),category:"Render",description:"Shows your enabled mods"},minimap:{name:"Mini Map",function:new I(b),category:"Render",description:"Shows nearby entities"},renderdisabler:{name:"Render Disabler",function:new I(L),category:"Render",description:"Disable some renders and get more fps"},asyncevents:{name:"Async Events",function:new I(G),category:"Render",description:"Asynchronize intensive events, not supported with shaders and VERY buggy. Best for pvp serveres"},entitydistance:{name:"Entity Distance",function:new I(F),category:"Render",description:"Lowers entity distance to improve performance"},onerenderdistance:{name:"True One Chunk",function:new I(W),category:"Render",description:"Actual one chunk render distance"},passwordhider:{name:"Password Hider",function:new I(N),category:"Render",description:"Hides password when typing it in"},esp:{name:"ESP",function:new I(U),category:"Render",description:"Shows entities through walls"},outline:{name:"Custom Outline",function:new I($),category:"Render",description:"Change the color of the properties of the block outline"},killaura:{name:"Kill Aura",function:new I(H),category:"Combat",description:"Attack players around you"},step:{name:"Step",function:new I(v),category:"Movement",description:"Allows you to step higher"},timer:{name:"Timer",function:new I(Q),category:"Player",description:"Modify client side tps"},fastplace:{name:"Fast Place",function:new I(Z),category:"Player",description:"Allows you to place blocks fast"},airjump:{name:"Air Jump",function:new I(Y),category:"Player",description:"Allows you to jump even if you are not on the ground"},nofall:{name:"No Fall",function:new I(z),category:"Player",description:"You won't take any fall damage"},bednuker:{name:"Bed Nuker",function:new I(X),category:"Player",description:"Destroy beds through defenses"},servercrasher:{name:"Server Crasher",function:new I(B),category:"Exploit",description:"Sends just a few swing packets ;)"}};function Ie(){if(document.getElementById("ui")!=null)document.getElementById("ui").remove();if(ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=Me,ModAPI.mc.currentScreen.getRef().constructor.name==="nmcg_GuiIngameMenu")ModAPI.mc.displayGuiScreen(null)}function A(){if(document.getElementById("ui")==null)return!1;else return!0}function ue(e){const n=e.function.settings;console.log(n);const t=document.createElement("div");t.className="setting",t.style.position="absolute",t.style.color="white",t.style.backdropFilter="blur(8px)",t.style.background="rgba(0,0,0,0.5)",t.style.borderRadius="15px",t.style.padding="15px",t.style.fontFamily="monospace",t.style.overflowX="hidden",t.style.overflowX="auto",t.style.width="15%",t.style.height="50%",t.style.top="100px",t.style.left="100px",t.style.userSelect="none",t.style.zIndex="1000",t.style.backdropFilter="blur(8px)",t.style.resize="both";const r=document.createElement("div");r.innerText=e.name,r.style.fontSize="22px",t.appendChild(r);const s=document.createElement("div");s.innerText="X",s.style.fontSize="28px",s.style.position="absolute",s.style.right="15px",s.style.top="10px",s.style.cursor="pointer",s.onclick=function(){t.remove()},t.appendChild(s);const d=t;function m({movementX:h,movementY:o}){let a=window.getComputedStyle(d),c=parseInt(a.left),l=parseInt(a.top);d.style.left=`${c+h}px`,d.style.top=`${l+o}px`}r.addEventListener("mousedown",()=>{window.addEventListener("mousemove",m)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",m)}),document.body.appendChild(t);const i=document.createElement("button");i.innerText="Toggle",i.style.border="none",i.style.color="#FFF",i.style.background="rgba(100,100,100,0.5)",i.style.width="100%",i.style.margin="5px",i.style.borderRadius="10px",i.style.fontSize="18px",i.style.padding="10px 5px 10px 5px",i.onclick=()=>{e.function.toggle(),k("toggle")},t.appendChild(i);const g=document.createElement("button");if(e.function.toggleKey!=null)g.innerText=e.function.toggleKey;else g.innerText="No key set";g.style.border="none",g.style.color="#FFF",g.style.background="rgba(100,100,100,0.5)",g.style.width="100%",g.style.margin="5px",g.style.borderRadius="10px",g.style.fontSize="18px",g.style.padding="10px 0px 10px 0px",g.onclick=()=>{g.innerText="Press any key or esc...",window.addEventListener("keydown",h);function h(o){if(o.code=="Escape")e.function.toggleKey="KeyNone";else e.function.toggleKey=o.code;g.innerText=e.function.toggleKey,window.removeEventListener("keydown",h)}},t.appendChild(g);for(let h in n)if(n.hasOwnProperty(h)){const o=n[h],a=document.createElement("div");if(a.style.background="rgba(100,100,100,0.5)",a.style.margin="5px",a.style.padding="5px",a.style.borderRadius="10px",t.appendChild(a),o.type=="List"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.current}`,a.appendChild(c);const l=document.createElement("select");l.onchange=()=>{o.current=parseInt(l.value),c.innerText=`${o.name} - ${o.current}`};for(let u in o.modes){if(o.modes.hasOwnProperty(u)){const x=document.createElement("option");x.innerText=o.modes[u],x.value=`${u}`}a.appendChild(l)}}else if(o.type=="Slider"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.current}`,a.appendChild(c);const l=document.createElement("input");l.type="range",l.style.width="100%",l.step=o.step,l.min=o.min,l.max=o.max,l.value=o.current,l.onchange=()=>{o.current=parseFloat(l.value),c.innerText=`${o.name} - ${o.current}`},a.appendChild(l)}else if(o.type=="Boolean"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.toggled}`,a.appendChild(c);const l=document.createElement("input");l.type="checkbox",l.checked=o.toggled,l.onchange=()=>{o.toggled=l.checked,c.innerText=`${o.name} - ${o.toggled}`},a.appendChild(l)}else if(o.type=="Color"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.current}`,a.appendChild(c);const l=document.createElement("input");l.type="color",l.value=o.current,l.onchange=()=>{o.current=l.value,c.innerText=`${o.name} - ${o.current}`},a.appendChild(l)}}}function Ae(){ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=()=>{},document.exitPointerLock();const e=C,n=document.createElement("div");n.style.animation="fade-in 0.5s",n.id="ui",n.style.position="fixed",n.style.width="66%",n.style.height="66%",n.style.top=`${document.body.clientHeight*0.165}px`,n.style.left=`${document.body.clientWidth*0.165}px`,n.style.color="white",n.style.backdropFilter="blur(8px)",n.style.background="rgba(0,0,0,0.75)",n.style.borderRadius="15px",n.style.padding="15px",n.style.fontFamily="monospace",n.style.overflowY="hidden",n.style.userSelect="none",n.style.zIndex="1000",document.body.appendChild(n);const t=document.createElement("div");t.innerText=e,t.style.fontSize="24px",t.style.margin="5px",n.appendChild(t);const r=document.createElement("input");r.style.width="33%",r.type="text",r.style.border="solid 2px rgba(200,200,200,0.5)",r.style.borderRadius="10px",r.style.color="rgba(255,255,255,1)",r.style.display="inline-block",r.style.padding="8px",r.style.marginLeft="20px",r.style.fontSize="22px",r.style.background="rgba(50,50,50,.24)",r.placeholder="\uD83D\uDD0E\uFE0E Search",r.style.backdropFilter="blur(8px)";const s=document.createElement("div");s.innerText="X",s.style.fontSize="28px",s.style.position="absolute",s.style.right="15px",s.style.top="10px",s.style.cursor="pointer",s.onclick=function(){Ie()},n.appendChild(s);const d=document.createElement("div");d.style.overflowX="scroll",n.appendChild(d);for(let m in w)if(w.hasOwnProperty(m)){const i=document.createElement("div");i.innerText=w[m],i.style.fontSize="18px",i.style.cursor="pointer",i.style.display="inline-block",i.style.padding="10px",i.style.margin="5px",i.style.background="rgba(100,100,100,0.5)",i.style.borderRadius="5px",i.onclick=()=>{}}p=document.createElement("center"),p.style.height="90%",p.style.overflowY="scroll",n.appendChild(p),k("ui")}function k(e){if(console.log(e),A()){p.innerHTML="";for(let n in f)if(f.hasOwnProperty(n)){const t=document.createElement("div");t.addEventListener("click",(d)=>{console.log(f[n]),f[n].function.toggle(),k("modl")});const r=document.createElement("div");r.innerText=`${f[n].name}`,r.style.fontSize="22px",r.style.fontWeight="bold",t.appendChild(r),t.appendChild(document.createElement("hr"));const s=document.createElement("div");if(s.innerText=`${f[n].description}`,t.appendChild(s),t.style.textAlign="left",t.style.display="inline-block",t.style.overflowX="hidden",t.style.width="25%",t.style.height="25%",t.style.padding="5px",t.style.borderRadius="15px",t.style.margin="10px",t.style.cursor="pointer",t.style.overflowY="scroll",t.style.background="rgba(100,100,100,0.5)",f[n].function.getEnabled())t.style.boxShadow=`0px 0px 15px ${S}`;t.oncontextmenu=(d)=>{d.preventDefault(),new ue(f[n]),console.log(f[n])},p.appendChild(t)}}}function K(){}function D(e){if(e.code=="ShiftRight"){if(!A())Ae()}if(ModAPI.mc.currentScreen==null&&ModAPI.mc.ingameGUI!=null){for(let n in f)if(e.code==f[n].function.toggleKey)f[n].function.toggle()}}var p,Me=ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen;ModAPI.meta.title("Justin v2");ModAPI.meta.credits("Murturtle");ModAPI.meta.description("Press right shift ;)");ModAPI.require("player");ModAPI.require("network");ModAPI.require("settings");ModAPI.require("world");var ye=ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen;ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen=function(...e){return K(),ye.apply(this,e)};document.addEventListener("keydown",D);ModAPI.addEventListener("update",()=>{for(let e in f)if(f.hasOwnProperty(e))f[e].function.onUpdate()});document.body.appendChild(document.createElement("style"));var M=document.styleSheets[0];M.insertRule(`
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
`);M.insertRule(`
  ::-webkit-scrollbar {
    width: 10px;
  }
`);M.insertRule(`
  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0);
  }
`);M.insertRule(`
  ::-webkit-scrollbar-thumb {
    background: rgba(100, 100, 100, 0.5);
    filter: blur(4px);
  }
`);M.insertRule(`
  ::-webkit-resizer {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);M.insertRule(`
  ::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);M.insertRule(`
  @keyframes rgb-glow {
    0% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
    16% { box-shadow: 0px 0px 40px rgba(255, 255, 0, 0.75); }
    33% { box-shadow: 0px 0px 40px rgba(0, 255, 0, 0.75); }
    50% { box-shadow: 0px 0px 40px rgba(0, 255, 255, 0.75); }
    66% { box-shadow: 0px 0px 40px rgba(0, 0, 255, 0.75); }
    83% { box-shadow: 0px 0px 40px rgba(255, 0, 255, 0.75); }
    100% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
  }
`);M.insertRule(`
  @keyframes rgb-text {
    0% { color: rgba(255, 0, 0, 0.75); }
    16% { color: rgba(255, 255, 0, 0.75); }
    33% { color: rgba(0, 255, 0, 0.75); }
    50% { color: rgba(0, 255, 255, 0.75); }
    66% { color: rgba(0, 0, 255, 0.75); }
    83% { color: rgba(255, 0, 255, 0.75); }
    100% { color: rgba(255, 0, 0, 0.75); }
  }
`);

//# debugId=098C9CC01298BE7E64756E2164756E21
//# sourceMappingURL=data:application/json;base64,
