var Q=Object.defineProperty;var y=(e,t)=>{for(var n in t)Q(e,n,{get:t[n],enumerable:!0,configurable:!0,set:(i)=>t[n]=()=>i})};function Z(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:{r:255,g:255,b:255}}var k="Justin Client v2",w="#00c3ff",I=Z(w),Ie={r:Math.round((I.r/255+Number.EPSILON)*100)/100,g:Math.round((I.g/255+Number.EPSILON)*100)/100,b:Math.round((I.b/255+Number.EPSILON)*100)/100};var C={};y(C,{init:()=>J});function J(e){e.settings=[{name:"Height",type:"Slider",min:1,max:6,step:0.5,current:1.5}],e.onUpdate=function(){if(e.getEnabled()){if(ModAPI.player.stepHeight!=e.settings[0].current)ModAPI.player.stepHeight=e.settings[0].current}},e.onEnable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=e.settings[0].current},e.onDisable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=0.6000000238418579}}var R={};y(R,{init:()=>q});function q(e){e.crshInter=null,e.settings=[{name:"PPS",type:"Slider",min:20,max:20000,step:10,current:5000}];function t(){if(ModAPI.player!=null)for(let n=0;n<e.settings[0].current;n++)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]());else e.disable()}e.onEnable=function(){e.crshInter=setInterval(t,1000)},e.onDisable=function(){if(e.crshInter!=null)clearInterval(e.crshInter)}}var T={};y(T,{init:()=>V});function V(e){function t(o,d){if(o===d)return!0;if(o==null||d==null)return!1;if(o.length!==d.length)return!1;for(let c=0;c<o.length;++c)if(o[c]!==d[c])return!1;return!0}const n=(o)=>{let d=0;o.split("").forEach((s)=>{d=s.charCodeAt(0)+((d<<5)-d)});let c="#";for(let s=0;s<3;s++){const f=d>>s*8&255;c+=f.toString(16).padStart(2,"0")}return c};function i(o,d){return d=d||2,(new Array(d).join("0")+o).slice(-d)}function a(o){if(o.indexOf("#")===0)o=o.slice(1);if(o.length===3)o=o[0]+o[0]+o[1]+o[1]+o[2]+o[2];if(o.length!==6)throw new Error("Invalid HEX color.");const d=(255-parseInt(o.slice(0,2),16)).toString(16),c=(255-parseInt(o.slice(2,4),16)).toString(16),s=(255-parseInt(o.slice(4,6),16)).toString(16);return`#${i(d,2)}${i(c,2)}${i(s,2)}`}let r=document.createElement("div");r.style.position="fixed",r.style.right="0",r.style.top="0",r.style.background="#000",r.style.color="#FFF",r.style.zIndex="100",r.style.backdropFilter="blur(8px)",r.style.background="rgba(0,0,0,0.5)",r.style.borderRadius="15px",r.style.padding="10px",r.style.fontFamily="monospace",r.style.textAlign="right",r.style.fontSize="18px",r.style.userSelect="none",r.style.pointerEvents="none",document.body.appendChild(r),r.hidden=!0;let u=[],l=[];const m=r;function h({movementX:o,movementY:d}){let c=window.getComputedStyle(m),s=parseInt(c.right),f=parseInt(c.top);m.style.right=`${s-o}px`,m.style.top=`${f+d}px`}m.addEventListener("mousedown",()=>{window.addEventListener("mousemove",h)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",h)}),e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||P()&&e.getEnabled()){if(P())r.style.pointerEvents="auto";else r.style.pointerEvents="none";r.hidden=!1,l=[];for(var o in g)l.push(g[o].function.getEnabled());if(t(u,l));else{r.innerText="";const d=document.createElement("div");d.innerText=k,d.style.fontWeight="bold",r.appendChild(d);for(var o in g)if(g[o].function.getEnabled()){const s=document.createElement("div");s.innerText=g[o].name,s.style.color=w,r.appendChild(s)}u=l}}else r.hidden=!0},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)r.hidden=!0,r.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)r.hidden=!1},e.onDisable=()=>{r.hidden=!0}}var D={};y(D,{init:()=>ee});function ee(e){e.settings=[{name:"Friendly Color",type:"Color",current:"#0000ff"},{name:"Enemy Color",type:"Color",current:"#ff0000"},{name:"Neutral Color",type:"Color",current:"#ffff00"}];let t=document.createElement("canvas");t.style.position="fixed",t.style.right="0",t.style.bottom="0",t.style.color="#FFF",t.style.zIndex="100",t.width=200,t.height=200,t.style.background="rgba(0,0,0,0.5)",t.style.borderRadius="100%",t.style.margin="10px",t.style.fontFamily="monospace",t.style.pointerEvents="none",t.style.userSelect="none",document.body.appendChild(t),t.hidden=!0;let n=t.getContext("2d"),i=t;function a({movementX:r,movementY:u}){let l=window.getComputedStyle(i),m=parseInt(l.left),h=parseInt(l.top);i.style.left=`${m+r}px`,i.style.top=`${h+u}px`}i.addEventListener("mousedown",()=>{window.addEventListener("mousemove",a)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",a)}),e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||P()&&e.getEnabled()){if(P())t.style.pointerEvents="auto";else t.style.pointerEvents="none";if(t.hidden=!1,n.clearRect(0,0,200,200),ModAPI.mc.theWorld!=null)ModAPI.world.loadedEntityList.array1.forEach((r)=>{if(r!=null){const u=ModAPI.player.posX-r.posX+100,l=ModAPI.player.posZ-r.posZ+100;if(r.getRef().constructor.name=="nmce_EntityOtherPlayerMP")n.fillStyle=e.settings[1].current;else n.fillStyle=e.settings[2].current;n.fillRect(u-2.5,l-2.5,5,5)}}),n.fillStyle=e.settings[0].current,n.fillRect(97.5,97.5,5,5)}else t.hidden=!0},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)t.hidden=!0,t.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)t.hidden=!1},e.onDisable=()=>{t.hidden=!0}}var L={};y(L,{init:()=>te});function te(e){let t=[{name:"Particles",type:"Boolean",toggled:!0},{name:"Entities",type:"Boolean",toggled:!1},{name:"Weather",type:"Boolean",toggled:!0},{name:"Enchantment Book",type:"Boolean",toggled:!0},{name:"Beacon Beam",type:"Boolean",toggled:!1},{name:"Scoreboard",type:"Boolean",toggled:!1},{name:"Nametags",type:"Boolean",toggled:!1},{name:"Armor",type:"Boolean",toggled:!1},{name:"In Game Overlay",type:"Boolean",toggled:!1},{name:"Lighting",type:"Boolean",toggled:!1}],n={get(b,A){if(typeof b[A]==="object"&&b[A]!==null)return new Proxy(b[A],n);else return b[A]},set(b,A,j){return b[A]=j,S(),!0}};e.settings=new Proxy(t,n);const i=ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles,a=ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity,r=ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow,u=ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt,l=ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt,m=ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard,h=ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName,o=ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer,d=ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay,c=ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting,s=ModAPI.hooks.methods.nmw_World_checkLightFor,f=ModAPI.hooks.methods.nmwc_Chunk_getLightFor,_=ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor;function S(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=()=>{};else ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=i;if(e.settings[1].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=()=>{};else ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=a;if(e.settings[2].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=()=>{};else ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=r;if(e.settings[3].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=u;if(e.settings[4].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=l;if(e.settings[5].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=m;if(e.settings[6].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=()=>{};else ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=h;if(e.settings[7].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=()=>{};else ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=o;if(e.settings[8].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=d;if(e.settings[9].toggled&&e.getEnabled())ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=()=>{},ModAPI.hooks.methods.nmw_World_checkLightFor=()=>!1,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=()=>15,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=()=>15;else ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=c,ModAPI.hooks.methods.nmw_World_checkLightFor=s,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=f,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=_}e.onUpdate=()=>{},e.onEnable=()=>{S()},e.onDisable=()=>{S()}}var B={};y(B,{init:()=>ne});function ne(e){let t=[{name:"Update Chunks",type:"Boolean",toggled:!0}],n={get(r,u){if(typeof r[u]==="object"&&r[u]!==null)return new Proxy(r[u],n);else return r[u]},set(r,u,l){return console.log(`Property ${String(u)} changed from ${r[u]} to ${l}`),r[u]=l,a(),!0}};e.settings=new Proxy(t,n);const i=ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks;function a(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=(...r)=>{setTimeout(function(){return i.apply(this,r)},1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=i}e.onUpdate=()=>{},e.onEnable=()=>{a()},e.onDisable=()=>{a()}}var O={};y(O,{init:()=>oe});function oe(e){e.settings=[{name:"Distance",type:"Slider",min:4,max:32,step:2,current:16},{name:"Ignore Players",type:"Boolean",toggled:!0}],e.onUpdate=()=>{if(e.getEnabled())ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)if(t.getDistanceSqToEntity(ModAPI.player.getRef())<e.settings[0].current*e.settings[0].current||t.getRef().constructor.name=="nmce_EntityOtherPlayerMP"&&e.settings[1].toggled)t.renderDistanceWeight=100;else t.renderDistanceWeight=0})},e.onEnable=()=>{},e.onDisable=()=>{ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)t.renderDistanceWeight=1})}}var F={};y(F,{init:()=>re});function re(e){let t=0;e.onUpdate=()=>{if(e.getEnabled()&&t!==ModAPI.mc.gameSettings.renderDistanceChunks)ModAPI.mc.gameSettings.renderDistanceChunks=Math.floor(ModAPI.mc.gameSettings.renderDistanceChunks)+0.5,t=ModAPI.mc.gameSettings.renderDistanceChunks,console.log(ModAPI.mc.gameSettings.renderDistanceChunks)}}var G={};y(G,{init:()=>ie});function ie(e){const t=ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0;ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0=function(...n){if(e.getEnabled()){const i=ModAPI.util.jclStrToJsStr(ModAPI.mc.currentScreen.inputField.text1.getRef());if(i.startsWith("/l ")||i.startsWith("/login ")||i.startsWith("/reg ")||i.startsWith("/register "))ModAPI.mc.currentScreen.inputField.visible1=0;else ModAPI.mc.currentScreen.inputField.visible1=1}return t.apply(this,n)},e.onDisable=()=>{if(ModAPI.mc.currentScreen!=null){if(ModAPI.mc.currentScreen.inputField!=null)ModAPI.mc.currentScreen.inputField.visible1=1}}}var $={};y($,{init:()=>se});function se(e){let t=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,n=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();e.settings=[];const i=ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox;class a{constructor(){if(e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=function(...r){ModAPI.hooks.methods.nlevo_GlStateManager_disableDepth(),i.apply(this,r),ModAPI.hooks.methods.nlevo_GlStateManager_enableDepth()};else ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=i}static onClick(){n.remove()}}e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.renderManager!=null)ModAPI.mc.renderManager.debugBoundingBox=1},e.onEnable=()=>{if(new a,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=1},e.onDisable=()=>{if(new a,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=0}}var N={};y(N,{init:()=>le});function le(e){let t=[{name:"Red",type:"Slider",min:0,max:1,step:0.1,current:I.r},{name:"Green",type:"Slider",min:0,max:1,step:0.1,current:I.g},{name:"Blue",type:"Slider",min:0,max:1,step:0.01,current:I.b},{name:"Alpha",type:"Slider",min:0,max:1,step:0.01,current:1}],n={get(l,m){if(typeof l[m]==="object"&&l[m]!==null)return new Proxy(l[m],n);else return l[m]},set(l,m,h){return l[m]=h,u(),!0}};e.settings=new Proxy(t,n);let i=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,a=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();const r=ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a;function u(){if(e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=function(...l){ModAPI.hooks.methods.nlevo_GlStateManager_color(t[0].current,t[1].current,t[2].current,t[3].current),r.apply(this,l),ModAPI.hooks.methods.nlevo_GlStateManager_color(1,1,1,1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=r}e.onEnable=()=>{u()},e.onDisable=()=>{u()}}var U={};y(U,{init:()=>de});function de(e){e.crshInter=null,e.settings=[{name:"Reach",type:"Slider",min:0,max:6,step:0.1,current:3},{name:"Ignore GUI",type:"Boolean",toggled:!1},{name:"Attack Delay (ms)",type:"Slider",min:125,max:500,step:5,current:125},{name:"Packet Look",type:"Boolean",toggled:!1},{name:"Packet Click",type:"Boolean",toggled:!1},{name:"Disable On Death",type:"Boolean",toggled:!0}],e.toggleKey="KeyN";let t=0;const n=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1],i=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...a){if(e.settings[5].toggled&&e.getEnabled())e.disable();return i.apply(this,a)},e.onUpdate=()=>{if(e.getEnabled())if(ModAPI.mc.theWorld){let a=!1;if(ModAPI.mc.currentScreen==null||e.settings[1].toggled)a=!1,ModAPI.world.loadedEntityList.array1.forEach((r)=>{if(r!=null){if(r.getRef().constructor.name=="nmce_EntityOtherPlayerMP"){if(!a){const{posX:u,posY:l,posZ:m}=r,h=u-ModAPI.player.posX,o=l-ModAPI.player.posY,d=m-ModAPI.player.posZ,c=Math.sqrt(h*h+d*d),s=Math.atan2(d,h)*180/Math.PI-90,f=-(Math.atan2(o,c)*180/Math.PI);if(c<=e.settings[0].current&&Math.abs(o)<=e.settings[0].current&&Date.now()-t>e.settings[2].current){if(a=!0,ModAPI.mc.pointedEntity!=null){if(ModAPI.mc.pointedEntity.getEntityId()!=r.getEntityId())if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(s,f,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=s,ModAPI.player.rotationPitch=f}else if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(s,f,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=s,ModAPI.player.rotationPitch=f;if(setTimeout(()=>{if(e.settings[4].toggled)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]()),ModAPI.network.addToSendQueue(ModAPI.reflect.getClassByName("C02PacketUseEntity").constructors[1](r.getRef(),ModAPI.hooks.methods.nmnpc_C02PacketUseEntity$Action_values().data[1]));else ModAPI.clickMouse()},1),e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,ModAPI.player.onGround))},1)}}}}})}else e.disable()},e.onEnable=()=>{},e.onDisable=()=>{}}var W={};y(W,{init:()=>ae});function ae(e){e.crshInter=null,e.settings=[{name:"TPS",type:"Slider",min:1,max:30,step:0.5,current:22}],e.toggleKey="KeyNone",e.onUpdate=()=>{if(ModAPI.mc.timer!=null&&e.getEnabled())ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onEnable=()=>{ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onDisable=()=>{ModAPI.mc.timer.ticksPerSecond=20}}var z={};y(z,{init:()=>ce});function ce(e){e.onUpdate=()=>{if(e.getEnabled())ModAPI.mc.rightClickDelayTimer=0}}var K={};y(K,{init:()=>me});function me(e){e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.mc.gameSettings.keyBindJump.isPressed())setTimeout(()=>{ModAPI.player.jump()},1)}}}var H={};y(H,{init:()=>ue});function ue(e){const t=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1];e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.player.fallDistance>2)setInterval(()=>{ModAPI.network.addToSendQueue(t(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,1))},1)}}}function p(e){this.enabledDONOTUSE=!1,this.init=function(){},this.onEnable=function(){},this.onDisable=function(){},this.enable=function(){this.enabledDONOTUSE=!0,this.onEnable(),E("enable")},this.disable=function(){this.enabledDONOTUSE=!1,this.onDisable(),E("disable")},this.onKey=function(t){},this.onMCKey=function(t){},this.getEnabled=function(){return this.enabledDONOTUSE},this.toggle=function(){if(this.enabledDONOTUSE=!this.enabledDONOTUSE,this.enabledDONOTUSE)this.onEnable();else this.onDisable()},this.onUpdate=function(){},this.onFrame=()=>{},this.toggleKey="KeyNone",this.alert=function(){alert()},this.settings=[],e.init(this)}var v={movement:"Movement",player:"Player",render:"Render",fun:"Fun"},g={arraylist:{name:"Array List",function:new p(T),category:"Render",description:"Shows your enabled mods"},minimap:{name:"Mini Map",function:new p(D),category:"Render",description:"Shows nearby entities"},renderdisabler:{name:"Render Disabler",function:new p(L),category:"Render",description:"Disable some renders and get more fps"},asyncevents:{name:"Async Events",function:new p(B),category:"Render",description:"Asynchronize intensive events, not supported with shaders and VERY buggy. Best for pvp serveres"},entitydistance:{name:"Entity Distance",function:new p(O),category:"Render",description:"Lowers entity distance to improve performance"},pointfive:{name:"+0.5 Render Distance",function:new p(F),category:"Render",description:"Increases fps by desyncing loading/unloading chunks by adding 0.5 to the render distance"},passwordhider:{name:"Password Hider",function:new p(G),category:"Render",description:"Hides password when typing it in"},esp:{name:"ESP",function:new p($),category:"Render",description:"Shows entities through walls"},outline:{name:"Custom Outline",function:new p(N),category:"Render",description:"Change the color of the properties of the block outline"},killaura:{name:"Kill Aura",function:new p(U),category:"Combat",description:"Attack players around you"},step:{name:"Step",function:new p(C),category:"Movement",description:"Allows you to step higher"},timer:{name:"Timer",function:new p(W),category:"Player",description:"Modify client side tps"},fastplace:{name:"Fast Place",function:new p(z),category:"Player",description:"Allows you to place blocks fast"},airjump:{name:"Air Jump",function:new p(K),category:"Player",description:"Allows you to jump even if you are not on the ground"},nofall:{name:"No Fall",function:new p(H),category:"Player",description:"You won't take any fall damage"},servercrasher:{name:"Server Crasher",function:new p(R),category:"Exploit",description:"Sends just a few swing packets ;)"}};function he(){if(document.getElementById("ui")!=null)document.getElementById("ui").remove();if(ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=fe,ModAPI.mc.currentScreen.getRef().constructor.name==="nmcg_GuiIngameMenu")ModAPI.mc.displayGuiScreen(null)}function P(){if(document.getElementById("ui")==null)return!1;else return!0}function ye(e){const t=e.function.settings;console.log(t);const n=document.createElement("div");n.className="setting",n.style.position="absolute",n.style.color="white",n.style.backdropFilter="blur(8px)",n.style.background="rgba(0,0,0,0.5)",n.style.borderRadius="15px",n.style.padding="15px",n.style.fontFamily="monospace",n.style.overflowX="hidden",n.style.overflowX="auto",n.style.width="15%",n.style.height="50%",n.style.top="100px",n.style.left="100px",n.style.userSelect="none",n.style.zIndex="1000",n.style.backdropFilter="blur(8px)",n.style.resize="both";const i=document.createElement("div");i.innerText=e.name,i.style.fontSize="22px",n.appendChild(i);const a=document.createElement("div");a.innerText="X",a.style.fontSize="28px",a.style.position="absolute",a.style.right="15px",a.style.top="10px",a.style.cursor="pointer",a.onclick=function(){n.remove()},n.appendChild(a);const r=n;function u({movementX:h,movementY:o}){let d=window.getComputedStyle(r),c=parseInt(d.left),s=parseInt(d.top);r.style.left=`${c+h}px`,r.style.top=`${s+o}px`}i.addEventListener("mousedown",()=>{window.addEventListener("mousemove",u)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",u)}),document.body.appendChild(n);const l=document.createElement("button");l.innerText="Toggle",l.style.border="none",l.style.color="#FFF",l.style.background="rgba(100,100,100,0.5)",l.style.width="100%",l.style.margin="5px",l.style.borderRadius="10px",l.style.fontSize="18px",l.style.padding="10px 5px 10px 5px",l.onclick=()=>{e.function.toggle(),E("toggle")},n.appendChild(l);const m=document.createElement("button");if(e.function.toggleKey!=null)m.innerText=e.function.toggleKey;else m.innerText="No key set";m.style.border="none",m.style.color="#FFF",m.style.background="rgba(100,100,100,0.5)",m.style.width="100%",m.style.margin="5px",m.style.borderRadius="10px",m.style.fontSize="18px",m.style.padding="10px 0px 10px 0px",m.onclick=()=>{m.innerText="Press any key or esc...",window.addEventListener("keydown",h);function h(o){if(o.code=="Escape")e.function.toggleKey="KeyNone";else e.function.toggleKey=o.code;m.innerText=e.function.toggleKey,window.removeEventListener("keydown",h)}},n.appendChild(m);for(let h in t)if(t.hasOwnProperty(h)){const o=t[h],d=document.createElement("div");if(d.style.background="rgba(100,100,100,0.5)",d.style.margin="5px",d.style.padding="5px",d.style.borderRadius="10px",n.appendChild(d),o.type=="List"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.current}`,d.appendChild(c);const s=document.createElement("select");s.onchange=()=>{o.current=parseInt(s.value),c.innerText=`${o.name} - ${o.current}`};for(let f in o.modes){if(o.modes.hasOwnProperty(f)){const _=document.createElement("option");_.innerText=o.modes[f],_.value=`${f}`}d.appendChild(s)}}else if(o.type=="Slider"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.current}`,d.appendChild(c);const s=document.createElement("input");s.type="range",s.style.width="100%",s.step=o.step,s.min=o.min,s.max=o.max,s.value=o.current,s.onchange=()=>{o.current=parseFloat(s.value),c.innerText=`${o.name} - ${o.current}`},d.appendChild(s)}else if(o.type=="Boolean"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.toggled}`,d.appendChild(c);const s=document.createElement("input");s.type="checkbox",s.checked=o.toggled,s.onchange=()=>{o.toggled=s.checked,c.innerText=`${o.name} - ${o.toggled}`},d.appendChild(s)}else if(o.type=="Color"){const c=document.createElement("div");c.style.fontSize="20px",c.innerText=`${o.name} - ${o.current}`,d.appendChild(c);const s=document.createElement("input");s.type="color",s.value=o.current,s.onchange=()=>{o.current=s.value,c.innerText=`${o.name} - ${o.current}`},d.appendChild(s)}}}function pe(){ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=()=>{},document.exitPointerLock();const e=k,t=document.createElement("div");t.style.animation="fade-in 0.5s",t.id="ui",t.style.position="fixed",t.style.width="66%",t.style.height="66%",t.style.top=`${document.body.clientHeight*0.165}px`,t.style.left=`${document.body.clientWidth*0.165}px`,t.style.color="white",t.style.backdropFilter="blur(8px)",t.style.background="rgba(0,0,0,0.75)",t.style.borderRadius="15px",t.style.padding="15px",t.style.fontFamily="monospace",t.style.overflowY="hidden",t.style.userSelect="none",t.style.zIndex="1000",document.body.appendChild(t);const n=document.createElement("div");n.innerText=e,n.style.fontSize="24px",n.style.margin="5px",t.appendChild(n);const i=document.createElement("input");i.style.width="33%",i.type="text",i.style.border="solid 2px rgba(200,200,200,0.5)",i.style.borderRadius="10px",i.style.color="rgba(255,255,255,1)",i.style.display="inline-block",i.style.padding="8px",i.style.marginLeft="20px",i.style.fontSize="22px",i.style.background="rgba(50,50,50,.24)",i.placeholder="\uD83D\uDD0E\uFE0E Search",i.style.backdropFilter="blur(8px)";const a=document.createElement("div");a.innerText="X",a.style.fontSize="28px",a.style.position="absolute",a.style.right="15px",a.style.top="10px",a.style.cursor="pointer",a.onclick=function(){he()},t.appendChild(a);const r=document.createElement("div");r.style.overflowX="scroll",t.appendChild(r);for(let u in v)if(v.hasOwnProperty(u)){const l=document.createElement("div");l.innerText=v[u],l.style.fontSize="18px",l.style.cursor="pointer",l.style.display="inline-block",l.style.padding="10px",l.style.margin="5px",l.style.background="rgba(100,100,100,0.5)",l.style.borderRadius="5px",l.onclick=()=>{}}x=document.createElement("center"),x.style.height="90%",x.style.overflowY="scroll",t.appendChild(x),E("ui")}function E(e){if(console.log(e),P()){x.innerHTML="";for(let t in g)if(g.hasOwnProperty(t)){const n=document.createElement("div");n.addEventListener("click",(r)=>{console.log(g[t]),g[t].function.toggle(),E("modl")});const i=document.createElement("div");i.innerText=`${g[t].name}`,i.style.fontSize="22px",i.style.fontWeight="bold",n.appendChild(i),n.appendChild(document.createElement("hr"));const a=document.createElement("div");if(a.innerText=`${g[t].description}`,n.appendChild(a),n.style.textAlign="left",n.style.display="inline-block",n.style.overflowX="hidden",n.style.width="25%",n.style.height="25%",n.style.padding="5px",n.style.borderRadius="15px",n.style.margin="10px",n.style.cursor="pointer",n.style.overflowY="scroll",n.style.background="rgba(100,100,100,0.5)",g[t].function.getEnabled())n.style.boxShadow=`0px 0px 15px ${w}`;n.oncontextmenu=(r)=>{r.preventDefault(),new ye(g[t]),console.log(g[t])},x.appendChild(n)}}}function X(){const e=ModAPI.mc.currentScreen.buttonList.array1[0],t=ModAPI.mc.currentScreen.buttonList.array1[1],n=ModAPI.mc.currentScreen.buttonList.array1[2],i=ModAPI.mc.currentScreen.buttonList.array1[3];e.width17=n.width17,t.width17=i.width17,e.yPosition=n.yPosition-25,t.yPosition=i.yPosition-25,t.xPosition0=i.xPosition0,ModAPI.mc.currentScreen.enableBlur=0,ModAPI.mc.currentScreen.panoramaTimer-=1,ModAPI.mc.currentScreen.splashText=ModAPI.util.string(k)}function Y(e){if(e.code=="ShiftRight"){if(!P())pe()}if(ModAPI.mc.currentScreen==null&&ModAPI.mc.ingameGUI!=null){for(let t in g)if(e.code==g[t].function.toggleKey)g[t].function.toggle()}}var x,fe=ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen;ModAPI.meta.title("Justin v2");ModAPI.meta.credits("Murturtle");ModAPI.meta.description("Press right shift ;)");ModAPI.require("player");ModAPI.require("network");ModAPI.require("settings");ModAPI.require("world");var Pe=ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen;ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen=function(...e){return X(),Pe.apply(this,e)};document.addEventListener("keydown",Y);ModAPI.addEventListener("update",()=>{for(let e in g)if(g.hasOwnProperty(e))g[e].function.onUpdate()});document.body.appendChild(document.createElement("style"));var M=document.styleSheets[0];M.insertRule(`
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
`);M.insertRule(`
  ::-webkit-scrollbar {
    width: 10px;
  }
`);M.insertRule(`
  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0);
  }
`);M.insertRule(`
  ::-webkit-scrollbar-thumb {
    background: rgba(100, 100, 100, 0.5);
    filter: blur(4px);
  }
`);M.insertRule(`
  ::-webkit-resizer {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);M.insertRule(`
  ::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);M.insertRule(`
  @keyframes rgb-glow {
    0% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
    16% { box-shadow: 0px 0px 40px rgba(255, 255, 0, 0.75); }
    33% { box-shadow: 0px 0px 40px rgba(0, 255, 0, 0.75); }
    50% { box-shadow: 0px 0px 40px rgba(0, 255, 255, 0.75); }
    66% { box-shadow: 0px 0px 40px rgba(0, 0, 255, 0.75); }
    83% { box-shadow: 0px 0px 40px rgba(255, 0, 255, 0.75); }
    100% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
  }
`);M.insertRule(`
  @keyframes rgb-text {
    0% { color: rgba(255, 0, 0, 0.75); }
    16% { color: rgba(255, 255, 0, 0.75); }
    33% { color: rgba(0, 255, 0, 0.75); }
    50% { color: rgba(0, 255, 255, 0.75); }
    66% { color: rgba(0, 0, 255, 0.75); }
    83% { color: rgba(255, 0, 255, 0.75); }
    100% { color: rgba(255, 0, 0, 0.75); }
  }
`);

//# debugId=B555CD87D931915B64756E2164756E21
//# sourceMappingURL=data:application/json;base64,
