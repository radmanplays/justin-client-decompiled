var Q=Object.defineProperty;var p=(e,t)=>{for(var n in t)Q(e,n,{get:t[n],enumerable:!0,configurable:!0,set:(i)=>t[n]=()=>i})};function Z(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:{r:255,g:255,b:255}}var k="Justin Client v2",w="#00c3ff",M=Z(w),Me={r:Math.round((M.r/255+Number.EPSILON)*100)/100,g:Math.round((M.g/255+Number.EPSILON)*100)/100,b:Math.round((M.b/255+Number.EPSILON)*100)/100};var C={};p(C,{init:()=>J});function J(e){e.settings=[{name:"Height",type:"Slider",min:1,max:6,step:0.5,current:1.5}],e.onUpdate=function(){if(e.getEnabled()){if(ModAPI.player.stepHeight!=e.settings[0].current)ModAPI.player.stepHeight=e.settings[0].current}},e.onEnable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=e.settings[0].current},e.onDisable=function(){if(ModAPI.player!=null)ModAPI.player.stepHeight=0.6000000238418579}}var R={};p(R,{init:()=>q});function q(e){e.crshInter=null,e.settings=[{name:"PPS",type:"Slider",min:20,max:20000,step:10,current:5000}];function t(){if(ModAPI.player!=null)for(let n=0;n<e.settings[0].current;n++)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]());else e.disable()}e.onEnable=function(){e.crshInter=setInterval(t,1000)},e.onDisable=function(){if(e.crshInter!=null)clearInterval(e.crshInter)}}var T={};p(T,{init:()=>V});function V(e){function t(o,l){if(o===l)return!0;if(o==null||l==null)return!1;if(o.length!==l.length)return!1;for(let a=0;a<o.length;++a)if(o[a]!==l[a])return!1;return!0}const n=(o)=>{let l=0;o.split("").forEach((s)=>{l=s.charCodeAt(0)+((l<<5)-l)});let a="#";for(let s=0;s<3;s++){const f=l>>s*8&255;a+=f.toString(16).padStart(2,"0")}return a};function i(o,l){return l=l||2,(new Array(l).join("0")+o).slice(-l)}function c(o){if(o.indexOf("#")===0)o=o.slice(1);if(o.length===3)o=o[0]+o[0]+o[1]+o[1]+o[2]+o[2];if(o.length!==6)throw new Error("Invalid HEX color.");const l=(255-parseInt(o.slice(0,2),16)).toString(16),a=(255-parseInt(o.slice(2,4),16)).toString(16),s=(255-parseInt(o.slice(4,6),16)).toString(16);return`#${i(l,2)}${i(a,2)}${i(s,2)}`}let r=document.createElement("div");r.style.position="fixed",r.style.right="0",r.style.top="0",r.style.background="#000",r.style.color="#FFF",r.style.zIndex="100",r.style.backdropFilter="blur(8px)",r.style.background="rgba(0,0,0,0.5)",r.style.borderRadius="15px",r.style.padding="10px",r.style.fontFamily="monospace",r.style.textAlign="right",r.style.fontSize="18px",r.style.userSelect="none",r.style.pointerEvents="none",document.body.appendChild(r),r.hidden=!0;let u=[],d=[];const m=r;function h({movementX:o,movementY:l}){let a=window.getComputedStyle(m),s=parseInt(a.right),f=parseInt(a.top);m.style.right=`${s-o}px`,m.style.top=`${f+l}px`}m.addEventListener("mousedown",()=>{window.addEventListener("mousemove",h)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",h)}),e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.theWorld!=null&&ModAPI.mc.currentScreen==null||A()&&e.getEnabled()){if(A())r.style.pointerEvents="auto";else r.style.pointerEvents="none";r.hidden=!1,d=[];for(var o in g)d.push(g[o].function.getEnabled());if(t(u,d));else{r.innerText="";const l=document.createElement("div");l.innerText=k,l.style.fontWeight="bold",r.appendChild(l);for(var o in g)if(g[o].function.getEnabled()){const s=document.createElement("div");s.innerText=g[o].name,s.style.color=w,r.appendChild(s)}u=d}}else r.hidden=!0},ModAPI.addEventListener("frame",()=>{if(!e.getEnabled()||ModAPI.mc.theWorld==null||ModAPI.mc.currentScreen!=null)r.hidden=!0,r.style.pointerEvents="none"}),e.onEnable=()=>{if(ModAPI.mc.theWorld!=null&&ModAPI.currentScreen==null)r.hidden=!1},e.onDisable=()=>{r.hidden=!0}}var H={};var D={};p(D,{init:()=>ee});function ee(e){let t=[{name:"Particles",type:"Boolean",toggled:!0},{name:"Entities",type:"Boolean",toggled:!1},{name:"Weather",type:"Boolean",toggled:!0},{name:"Enchantment Book",type:"Boolean",toggled:!0},{name:"Beacon Beam",type:"Boolean",toggled:!1},{name:"Scoreboard",type:"Boolean",toggled:!1},{name:"Nametags",type:"Boolean",toggled:!1},{name:"Armor",type:"Boolean",toggled:!1},{name:"In Game Overlay",type:"Boolean",toggled:!1},{name:"Lighting",type:"Boolean",toggled:!1}],n={get(I,b){if(typeof I[b]==="object"&&I[b]!==null)return new Proxy(I[b],n);else return I[b]},set(I,b,j){return I[b]=j,S(),!0}};e.settings=new Proxy(t,n);const i=ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles,c=ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity,r=ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow,u=ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt,d=ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt,m=ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard,h=ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName,o=ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer,l=ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay,a=ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting,s=ModAPI.hooks.methods.nmw_World_checkLightFor,f=ModAPI.hooks.methods.nmwc_Chunk_getLightFor,_=ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor;function S(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=()=>{};else ModAPI.hooks.methods.nmcp_EffectRenderer_renderParticles=i;if(e.settings[1].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=()=>{};else ModAPI.hooks.methods.nmcre_RenderManager_doRenderEntity=c;if(e.settings[2].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=()=>{};else ModAPI.hooks.methods.nmcr_EntityRenderer_renderRainSnow=r;if(e.settings[3].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityEnchantmentTableRenderer_renderTileEntityAt=u;if(e.settings[4].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=()=>{};else ModAPI.hooks.methods.nmcrt_TileEntityBeaconRenderer_renderTileEntityAt=d;if(e.settings[5].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderScoreboard=m;if(e.settings[6].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=()=>{};else ModAPI.hooks.methods.nmcre_RendererLivingEntity_renderName=h;if(e.settings[7].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=()=>{};else ModAPI.hooks.methods.nmcrel_LayerArmorBase_renderLayer=o;if(e.settings[8].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=()=>{};else ModAPI.hooks.methods.nmcg_GuiIngame_renderGameOverlay=l;if(e.settings[9].toggled&&e.getEnabled())ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=()=>{},ModAPI.hooks.methods.nmw_World_checkLightFor=()=>!1,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=()=>15,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=()=>15;else ModAPI.hooks.methods.nlevo_GlStateManager_enableLighting=a,ModAPI.hooks.methods.nmw_World_checkLightFor=s,ModAPI.hooks.methods.nmwc_Chunk_getLightFor=f,ModAPI.hooks.methods.nmwc_EmptyChunk_getLightFor=_}e.onUpdate=()=>{},e.onEnable=()=>{S()},e.onDisable=()=>{S()}}var L={};p(L,{init:()=>te});function te(e){let t=[{name:"Update Chunks",type:"Boolean",toggled:!0}],n={get(r,u){if(typeof r[u]==="object"&&r[u]!==null)return new Proxy(r[u],n);else return r[u]},set(r,u,d){return console.log(`Property ${String(u)} changed from ${r[u]} to ${d}`),r[u]=d,c(),!0}};e.settings=new Proxy(t,n);const i=ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks;function c(){if(e.settings[0].toggled&&e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=(...r)=>{setTimeout(function(){return i.apply(this,r)},1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_updateChunks=i}e.onUpdate=()=>{},e.onEnable=()=>{c()},e.onDisable=()=>{c()}}var B={};p(B,{init:()=>ne});function ne(e){e.settings=[{name:"Distance",type:"Slider",min:4,max:32,step:2,current:16},{name:"Ignore Players",type:"Boolean",toggled:!0}],e.onUpdate=()=>{if(e.getEnabled())ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)if(t.getDistanceSqToEntity(ModAPI.player.getRef())<e.settings[0].current*e.settings[0].current||t.getRef().constructor.name=="nmce_EntityOtherPlayerMP"&&e.settings[1].toggled)t.renderDistanceWeight=100;else t.renderDistanceWeight=0})},e.onEnable=()=>{},e.onDisable=()=>{ModAPI.world.loadedEntityList.array1.forEach((t)=>{if(t!=null)t.renderDistanceWeight=1})}}var O={};p(O,{init:()=>oe});function oe(e){let t=0;e.onUpdate=()=>{if(e.getEnabled()&&t!==ModAPI.mc.gameSettings.renderDistanceChunks)ModAPI.mc.gameSettings.renderDistanceChunks=Math.floor(ModAPI.mc.gameSettings.renderDistanceChunks)+0.5,t=ModAPI.mc.gameSettings.renderDistanceChunks,console.log(ModAPI.mc.gameSettings.renderDistanceChunks)}}var F={};p(F,{init:()=>re});function re(e){const t=ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0;ModAPI.hooks.methods.nmcg_GuiChat_drawScreen0=function(...n){if(e.getEnabled()){const i=ModAPI.util.jclStrToJsStr(ModAPI.mc.currentScreen.inputField.text1.getRef());if(i.startsWith("/l ")||i.startsWith("/login ")||i.startsWith("/reg ")||i.startsWith("/register "))ModAPI.mc.currentScreen.inputField.visible1=0;else ModAPI.mc.currentScreen.inputField.visible1=1}return t.apply(this,n)},e.onDisable=()=>{if(ModAPI.mc.currentScreen!=null){if(ModAPI.mc.currentScreen.inputField!=null)ModAPI.mc.currentScreen.inputField.visible1=1}}}var G={};p(G,{init:()=>ie});function ie(e){let t=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,n=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();e.settings=[];const i=ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox;class c{constructor(){if(e.getEnabled())ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=function(...r){ModAPI.hooks.methods.nlevo_GlStateManager_disableDepth(),i.apply(this,r),ModAPI.hooks.methods.nlevo_GlStateManager_enableDepth()};else ModAPI.hooks.methods.nmcre_RenderManager_renderDebugBoundingBox=i}static onClick(){n.remove()}}e.onUpdate=()=>{if(e.getEnabled()&&ModAPI.mc.renderManager!=null)ModAPI.mc.renderManager.debugBoundingBox=1},e.onEnable=()=>{if(new c,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=1},e.onDisable=()=>{if(new c,ModAPI.mc.renderManager)ModAPI.mc.renderManager.debugBoundingBox=0}}var $={};p($,{init:()=>se});function se(e){let t=[{name:"Red",type:"Slider",min:0,max:1,step:0.1,current:M.r},{name:"Green",type:"Slider",min:0,max:1,step:0.1,current:M.g},{name:"Blue",type:"Slider",min:0,max:1,step:0.01,current:M.b},{name:"Alpha",type:"Slider",min:0,max:1,step:0.01,current:1}],n={get(d,m){if(typeof d[m]==="object"&&d[m]!==null)return new Proxy(d[m],n);else return d[m]},set(d,m,h){return d[m]=h,u(),!0}};e.settings=new Proxy(t,n);let i=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method().$worldRenderer,c=ModAPI.reflect.getClassById("net.minecraft.client.renderer.Tessellator").staticMethods.getInstance.method();const r=ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a;function u(){if(e.getEnabled())ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=function(...d){ModAPI.hooks.methods.nlevo_GlStateManager_color(t[0].current,t[1].current,t[2].current,t[3].current),r.apply(this,d),ModAPI.hooks.methods.nlevo_GlStateManager_color(1,1,1,1)};else ModAPI.hooks.methods.nmcr_RenderGlobal_func_181561_a=r}e.onEnable=()=>{u()},e.onDisable=()=>{u()}}var N={};p(N,{init:()=>le});function le(e){e.crshInter=null,e.settings=[{name:"Reach",type:"Slider",min:0,max:6,step:0.1,current:3},{name:"Ignore GUI",type:"Boolean",toggled:!1},{name:"Attack Delay (ms)",type:"Slider",min:125,max:500,step:5,current:125},{name:"Packet Look",type:"Boolean",toggled:!1},{name:"Packet Click",type:"Boolean",toggled:!1},{name:"Disable On Death",type:"Boolean",toggled:!0}],e.toggleKey="KeyN";let t=0;const n=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1],i=ModAPI.hooks.methods.nmcg_GuiGameOver_initGui;ModAPI.hooks.methods.nmcg_GuiGameOver_initGui=function(...c){if(e.settings[5].toggled&&e.getEnabled())e.disable();return i.apply(this,c)},e.onUpdate=()=>{if(e.getEnabled())if(ModAPI.mc.theWorld){let c=!1;if(ModAPI.mc.currentScreen==null||e.settings[1].toggled)c=!1,ModAPI.world.loadedEntityList.array1.forEach((r)=>{if(r!=null){if(r.getRef().constructor.name=="nmce_EntityOtherPlayerMP"){if(!c){const{posX:u,posY:d,posZ:m}=r,h=u-ModAPI.player.posX,o=d-ModAPI.player.posY,l=m-ModAPI.player.posZ,a=Math.sqrt(h*h+l*l),s=Math.atan2(l,h)*180/Math.PI-90,f=-(Math.atan2(o,a)*180/Math.PI);if(a<=e.settings[0].current&&Math.abs(o)<=e.settings[0].current&&Date.now()-t>e.settings[2].current){if(c=!0,ModAPI.mc.pointedEntity!=null){if(ModAPI.mc.pointedEntity.getEntityId()!=r.getEntityId())if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(s,f,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=s,ModAPI.player.rotationPitch=f}else if(e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(s,f,ModAPI.player.onGround))},1);else ModAPI.player.rotationYaw=s,ModAPI.player.rotationPitch=f;if(setTimeout(()=>{if(e.settings[4].toggled)ModAPI.network.addToSendQueue(ModAPI.reflect.getClassById("net.minecraft.network.play.client.C0APacketAnimation").constructors[0]()),ModAPI.network.addToSendQueue(ModAPI.reflect.getClassByName("C02PacketUseEntity").constructors[1](r.getRef(),ModAPI.hooks.methods.nmnpc_C02PacketUseEntity$Action_values().data[1]));else ModAPI.clickMouse()},1),e.settings[3].toggled)setTimeout(()=>{ModAPI.network.addToSendQueue(n(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,ModAPI.player.onGround))},1)}}}}})}else e.disable()},e.onEnable=()=>{},e.onDisable=()=>{}}var U={};p(U,{init:()=>de});function de(e){e.crshInter=null,e.settings=[{name:"TPS",type:"Slider",min:1,max:30,step:0.5,current:22}],e.toggleKey="KeyNone",e.onUpdate=()=>{if(ModAPI.mc.timer!=null&&e.getEnabled())ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onEnable=()=>{ModAPI.mc.timer.ticksPerSecond=e.settings[0].current},e.onDisable=()=>{ModAPI.mc.timer.ticksPerSecond=20}}var W={};p(W,{init:()=>ae});function ae(e){e.onUpdate=()=>{if(e.getEnabled())ModAPI.mc.rightClickDelayTimer=0}}var z={};p(z,{init:()=>ce});function ce(e){e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.mc.gameSettings.keyBindJump.isPressed())setTimeout(()=>{ModAPI.player.jump()},1)}}}var K={};p(K,{init:()=>me});function me(e){const t=ModAPI.reflect.getClassByName("C03PacketPlayer$C05PacketPlayerLook").constructors[1];e.onUpdate=()=>{if(e.getEnabled()){if(ModAPI.player.fallDistance>2)setInterval(()=>{ModAPI.network.addToSendQueue(t(ModAPI.player.rotationYaw,ModAPI.player.rotationPitch,1))},1)}}}function y(e){this.enabledDONOTUSE=!1,this.init=function(){},this.onEnable=function(){},this.onDisable=function(){},this.enable=function(){this.enabledDONOTUSE=!0,this.onEnable(),E("enable")},this.disable=function(){this.enabledDONOTUSE=!1,this.onDisable(),E("disable")},this.onKey=function(t){},this.onMCKey=function(t){},this.getEnabled=function(){return this.enabledDONOTUSE},this.toggle=function(){if(this.enabledDONOTUSE=!this.enabledDONOTUSE,this.enabledDONOTUSE)this.onEnable();else this.onDisable()},this.onUpdate=function(){},this.onFrame=()=>{},this.toggleKey="KeyNone",this.alert=function(){alert()},this.settings=[],e.init(this)}var v={movement:"Movement",player:"Player",render:"Render",fun:"Fun"},g={arraylist:{name:"Array List",function:new y(T),category:"Render",description:"Shows your enabled mods"},minimap:{name:"Mini Map",function:new y(H),category:"Render",description:"Shows nearby entities"},renderdisabler:{name:"Render Disabler",function:new y(D),category:"Render",description:"Disable some renders and get more fps"},asyncevents:{name:"Async Events",function:new y(L),category:"Render",description:"Asynchronize intensive events, not supported with shaders and VERY buggy. Best for pvp serveres"},entitydistance:{name:"Entity Distance",function:new y(B),category:"Render",description:"Lowers entity distance to improve performance"},pointfive:{name:"+0.5 Render Distance",function:new y(O),category:"Render",description:"Increases fps by desyncing loading/unloading chunks by adding 0.5 to the render distance"},passwordhider:{name:"Password Hider",function:new y(F),category:"Render",description:"Hides password when typing it in"},esp:{name:"ESP",function:new y(G),category:"Render",description:"Shows entities through walls"},outline:{name:"Custom Outline",function:new y($),category:"Render",description:"Change the color of the properties of the block outline"},killaura:{name:"Kill Aura",function:new y(N),category:"Combat",description:"Attack players around you"},step:{name:"Step",function:new y(C),category:"Movement",description:"Allows you to step higher"},timer:{name:"Timer",function:new y(U),category:"Player",description:"Modify client side tps"},fastplace:{name:"Fast Place",function:new y(W),category:"Player",description:"Allows you to place blocks fast"},airjump:{name:"Air Jump",function:new y(z),category:"Player",description:"Allows you to jump even if you are not on the ground"},nofall:{name:"No Fall",function:new y(K),category:"Player",description:"You won't take any fall damage"},servercrasher:{name:"Server Crasher",function:new y(R),category:"Exploit",description:"Sends just a few swing packets ;)"}};function ge(){if(document.getElementById("ui")!=null)document.getElementById("ui").remove();if(ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=pe,ModAPI.mc.currentScreen.getRef().constructor.name==="nmcg_GuiIngameMenu")ModAPI.mc.displayGuiScreen(null)}function A(){if(document.getElementById("ui")==null)return!1;else return!0}function he(e){const t=e.function.settings;console.log(t);const n=document.createElement("div");n.className="setting",n.style.position="absolute",n.style.color="white",n.style.backdropFilter="blur(8px)",n.style.background="rgba(0,0,0,0.5)",n.style.borderRadius="15px",n.style.padding="15px",n.style.fontFamily="monospace",n.style.overflowX="hidden",n.style.overflowX="auto",n.style.width="15%",n.style.height="50%",n.style.top="100px",n.style.left="100px",n.style.userSelect="none",n.style.zIndex="1000",n.style.backdropFilter="blur(8px)",n.style.resize="both";const i=document.createElement("div");i.innerText=e.name,i.style.fontSize="22px",n.appendChild(i);const c=document.createElement("div");c.innerText="X",c.style.fontSize="28px",c.style.position="absolute",c.style.right="15px",c.style.top="10px",c.style.cursor="pointer",c.onclick=function(){n.remove()},n.appendChild(c);const r=n;function u({movementX:h,movementY:o}){let l=window.getComputedStyle(r),a=parseInt(l.left),s=parseInt(l.top);r.style.left=`${a+h}px`,r.style.top=`${s+o}px`}i.addEventListener("mousedown",()=>{window.addEventListener("mousemove",u)}),window.addEventListener("mouseup",()=>{window.removeEventListener("mousemove",u)}),document.body.appendChild(n);const d=document.createElement("button");d.innerText="Toggle",d.style.border="none",d.style.color="#FFF",d.style.background="rgba(100,100,100,0.5)",d.style.width="100%",d.style.margin="5px",d.style.borderRadius="10px",d.style.fontSize="18px",d.style.padding="10px 5px 10px 5px",d.onclick=()=>{e.function.toggle(),E("toggle")},n.appendChild(d);const m=document.createElement("button");if(e.function.toggleKey!=null)m.innerText=e.function.toggleKey;else m.innerText="No key set";m.style.border="none",m.style.color="#FFF",m.style.background="rgba(100,100,100,0.5)",m.style.width="100%",m.style.margin="5px",m.style.borderRadius="10px",m.style.fontSize="18px",m.style.padding="10px 0px 10px 0px",m.onclick=()=>{m.innerText="Press any key or esc...",window.addEventListener("keydown",h);function h(o){if(o.code=="Escape")e.function.toggleKey="KeyNone";else e.function.toggleKey=o.code;m.innerText=e.function.toggleKey,window.removeEventListener("keydown",h)}},n.appendChild(m);for(let h in t)if(t.hasOwnProperty(h)){const o=t[h],l=document.createElement("div");if(l.style.background="rgba(100,100,100,0.5)",l.style.margin="5px",l.style.padding="5px",l.style.borderRadius="10px",n.appendChild(l),o.type=="List"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${o.name} - ${o.current}`,l.appendChild(a);const s=document.createElement("select");s.onchange=()=>{o.current=parseInt(s.value),a.innerText=`${o.name} - ${o.current}`};for(let f in o.modes){if(o.modes.hasOwnProperty(f)){const _=document.createElement("option");_.innerText=o.modes[f],_.value=`${f}`}l.appendChild(s)}}else if(o.type=="Slider"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${o.name} - ${o.current}`,l.appendChild(a);const s=document.createElement("input");s.type="range",s.style.width="100%",s.step=o.step,s.min=o.min,s.max=o.max,s.value=o.current,s.onchange=()=>{o.current=parseFloat(s.value),a.innerText=`${o.name} - ${o.current}`},l.appendChild(s)}else if(o.type=="Boolean"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${o.name} - ${o.toggled}`,l.appendChild(a);const s=document.createElement("input");s.type="checkbox",s.checked=o.toggled,s.onchange=()=>{o.toggled=s.checked,a.innerText=`${o.name} - ${o.toggled}`},l.appendChild(s)}else if(o.type=="Color"){const a=document.createElement("div");a.style.fontSize="20px",a.innerText=`${o.name} - ${o.current}`,l.appendChild(a);const s=document.createElement("input");s.type="color",s.value=o.current,s.onchange=()=>{o.current=s.value,a.innerText=`${o.name} - ${o.current}`},l.appendChild(s)}}}function ye(){ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen=()=>{},document.exitPointerLock();const e=k,t=document.createElement("div");t.style.animation="fade-in 0.5s",t.id="ui",t.style.position="fixed",t.style.width="66%",t.style.height="66%",t.style.top=`${document.body.clientHeight*0.165}px`,t.style.left=`${document.body.clientWidth*0.165}px`,t.style.color="white",t.style.backdropFilter="blur(8px)",t.style.background="rgba(0,0,0,0.75)",t.style.borderRadius="15px",t.style.padding="15px",t.style.fontFamily="monospace",t.style.overflowY="hidden",t.style.userSelect="none",t.style.zIndex="1000",document.body.appendChild(t);const n=document.createElement("div");n.innerText=e,n.style.fontSize="24px",n.style.margin="5px",t.appendChild(n);const i=document.createElement("input");i.style.width="33%",i.type="text",i.style.border="solid 2px rgba(200,200,200,0.5)",i.style.borderRadius="10px",i.style.color="rgba(255,255,255,1)",i.style.display="inline-block",i.style.padding="8px",i.style.marginLeft="20px",i.style.fontSize="22px",i.style.background="rgba(50,50,50,.24)",i.placeholder="\uD83D\uDD0E\uFE0E Search",i.style.backdropFilter="blur(8px)";const c=document.createElement("div");c.innerText="X",c.style.fontSize="28px",c.style.position="absolute",c.style.right="15px",c.style.top="10px",c.style.cursor="pointer",c.onclick=function(){ge()},t.appendChild(c);const r=document.createElement("div");r.style.overflowX="scroll",t.appendChild(r);for(let u in v)if(v.hasOwnProperty(u)){const d=document.createElement("div");d.innerText=v[u],d.style.fontSize="18px",d.style.cursor="pointer",d.style.display="inline-block",d.style.padding="10px",d.style.margin="5px",d.style.background="rgba(100,100,100,0.5)",d.style.borderRadius="5px",d.onclick=()=>{}}x=document.createElement("center"),x.style.height="90%",x.style.overflowY="scroll",t.appendChild(x),E("ui")}function E(e){if(console.log(e),A()){x.innerHTML="";for(let t in g)if(g.hasOwnProperty(t)){const n=document.createElement("div");n.addEventListener("click",(r)=>{console.log(g[t]),g[t].function.toggle(),E("modl")});const i=document.createElement("div");i.innerText=`${g[t].name}`,i.style.fontSize="22px",i.style.fontWeight="bold",n.appendChild(i),n.appendChild(document.createElement("hr"));const c=document.createElement("div");if(c.innerText=`${g[t].description}`,n.appendChild(c),n.style.textAlign="left",n.style.display="inline-block",n.style.overflowX="hidden",n.style.width="25%",n.style.height="25%",n.style.padding="5px",n.style.borderRadius="15px",n.style.margin="10px",n.style.cursor="pointer",n.style.overflowY="scroll",n.style.background="rgba(100,100,100,0.5)",g[t].function.getEnabled())n.style.boxShadow=`0px 0px 15px ${w}`;n.oncontextmenu=(r)=>{r.preventDefault(),new he(g[t]),console.log(g[t])},x.appendChild(n)}}}function X(){const e=ModAPI.mc.currentScreen.buttonList.array1[0],t=ModAPI.mc.currentScreen.buttonList.array1[1],n=ModAPI.mc.currentScreen.buttonList.array1[2],i=ModAPI.mc.currentScreen.buttonList.array1[3];e.width17=n.width17,t.width17=i.width17,e.yPosition=n.yPosition-25,t.yPosition=i.yPosition-25,t.xPosition0=i.xPosition0,ModAPI.mc.currentScreen.enableBlur=0,ModAPI.mc.currentScreen.panoramaTimer-=1,ModAPI.mc.currentScreen.splashText=ModAPI.util.string(k)}function Y(e){if(e.code=="ShiftRight"){if(!A())ye()}if(ModAPI.mc.currentScreen==null&&ModAPI.mc.ingameGUI!=null){for(let t in g)if(e.code==g[t].function.toggleKey)g[t].function.toggle()}}var x,pe=ModAPI.hooks.methods.nmcg_GuiIngameMenu_drawScreen;ModAPI.meta.title("Justin v2");ModAPI.meta.credits("Murturtle");ModAPI.meta.description("Press right shift ;)");ModAPI.require("player");ModAPI.require("network");ModAPI.require("settings");ModAPI.require("world");var fe=ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen;ModAPI.hooks.methods.nmcg_GuiMainMenu_drawScreen=function(...e){return X(),fe.apply(this,e)};document.addEventListener("keydown",Y);ModAPI.addEventListener("update",()=>{for(let e in g)if(g.hasOwnProperty(e))g[e].function.onUpdate()});document.body.appendChild(document.createElement("style"));var P=document.styleSheets[0];P.insertRule(`
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
`);P.insertRule(`
  ::-webkit-scrollbar {
    width: 10px;
  }
`);P.insertRule(`
  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0);
  }
`);P.insertRule(`
  ::-webkit-scrollbar-thumb {
    background: rgba(100, 100, 100, 0.5);
    filter: blur(4px);
  }
`);P.insertRule(`
  ::-webkit-resizer {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);P.insertRule(`
  ::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
    opacity: 0;
    display: none;
  }
`);P.insertRule(`
  @keyframes rgb-glow {
    0% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
    16% { box-shadow: 0px 0px 40px rgba(255, 255, 0, 0.75); }
    33% { box-shadow: 0px 0px 40px rgba(0, 255, 0, 0.75); }
    50% { box-shadow: 0px 0px 40px rgba(0, 255, 255, 0.75); }
    66% { box-shadow: 0px 0px 40px rgba(0, 0, 255, 0.75); }
    83% { box-shadow: 0px 0px 40px rgba(255, 0, 255, 0.75); }
    100% { box-shadow: 0px 0px 40px rgba(255, 0, 0, 0.75); }
  }
`);P.insertRule(`
  @keyframes rgb-text {
    0% { color: rgba(255, 0, 0, 0.75); }
    16% { color: rgba(255, 255, 0, 0.75); }
    33% { color: rgba(0, 255, 0, 0.75); }
    50% { color: rgba(0, 255, 255, 0.75); }
    66% { color: rgba(0, 0, 255, 0.75); }
    83% { color: rgba(255, 0, 255, 0.75); }
    100% { color: rgba(255, 0, 0, 0.75); }
  }
`);

//# debugId=69A1CF87FE2E136264756E2164756E21
//# sourceMappingURL=data:application/json;base64,
